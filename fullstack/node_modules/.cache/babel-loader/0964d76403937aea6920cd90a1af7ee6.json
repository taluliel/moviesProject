{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\FullStack\\\\fullStack1\\\\fullstack\\\\src\\\\views\\\\Member.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport memberUtils from '../utils/membersUtils';\nimport { useSelector } from \"react-redux\";\nimport subscriptionsUtils from '../utils/subscriptionsUtils';\nimport moviesUtils from '../utils/moviesUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MemberComp = props => {\n  _s();\n\n  const [member, setMember] = useState({});\n  const [movie, setMovie] = useState({});\n  const [movies, setMovies] = useState([]);\n  const [editMember, setEditMember] = useState(false);\n  const [subscribe, setSubscribe] = useState(false);\n  const [updatedMember, setUpdatedMember] = useState({});\n  const permissions = useSelector(state => state.user.Permissions);\n  useEffect(() => {\n    async function fetchData() {\n      let allMovies = await moviesUtils.allMovies();\n      setMovies(allMovies);\n\n      if (props.member) {\n        setMember(props.member);\n      } else {\n        let member = await memberUtils.getMember(props.match.params.id);\n        setMember(member);\n      }\n    }\n\n    fetchData();\n  }, [props]);\n  useEffect(() => {\n    async function fetchData() {\n      if (props.member) {\n        setMember(props.member);\n      } else {\n        let member = await memberUtils.getMember(props.match.params.id);\n        setMember(member);\n      }\n    }\n\n    fetchData();\n  }, [props]);\n\n  const deleteMember = async () => {\n    return await memberUtils.deleteMember(props.member._id);\n  };\n\n  const updateMember = async () => {\n    await memberUtils.EditMember(props.member._id, updatedMember);\n    setEditMember(!editMember);\n  };\n\n  const Subscribe = async () => {\n    let subscription = {\n      MemberId: member._id,\n      Movies: {\n        \"movieId\": movie.id,\n        \"date\": movie.date\n      }\n    };\n    console.log(subscription); // await subscriptionsUtils.AddSubscriptions(subscription);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"300px\",\n      borderWidth: \"5px\",\n      borderStyle: \"solid\",\n      borderColor: \"blue\"\n    },\n    children: [\"Name : \", member.Name, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 28\n    }, this), \"Email : \", member.Email, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 30\n    }, this), \"City : \", member.City, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \" Movies Watched : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"Subscribe to new movie\",\n        onClick: e => setSubscribe(!subscribe)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), subscribe && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"300px\",\n        borderWidth: \"3px\",\n        borderStyle: \"solid\",\n        borderColor: \"black\"\n      },\n      children: [\"Movie :\", /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"movie\",\n        id: \"movie\",\n        required: true,\n        onChange: e => setMovie({ ...movie,\n          id: e.target.value\n        }),\n        children: movies.map(item => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: item._id,\n            children: [\" \", item.Name, \" \"]\n          }, item._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 23\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 20\n      }, this), \"Date : \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"Date\",\n        required: true,\n        onChange: e => setMovie({ ...movie,\n          date: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 121\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Subscribe\",\n        onClick: Subscribe\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: e => setSubscribe(!subscribe),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 88\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 94\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), permissions.includes(\"Update Subscriptions\") && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"Edit\",\n        onClick: e => setEditMember(!editMember)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), permissions.includes(\"Delete Subscriptions\") && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"Delete\",\n        onClick: deleteMember\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 72\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 78\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: editMember && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"300px\",\n          borderWidth: \"3px\",\n          borderStyle: \"solid\",\n          borderColor: \"black\"\n        },\n        children: [\"Name : \", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"Name\",\n          value: member.Name,\n          onChange: e => setUpdatedMember({ ...updatedMember,\n            Name: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 20\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 139\n        }, this), \"Email : \", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"Email\",\n          value: member.Email,\n          onChange: e => setUpdatedMember({ ...updatedMember,\n            Email: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 142\n        }, this), \"City : \", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"City\",\n          value: member.City,\n          onChange: e => setUpdatedMember({ ...updatedMember,\n            City: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 138\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Save\",\n          onClick: updateMember\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: e => setEditMember(!editMember),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MemberComp, \"JqB3KwDPDfrYxlCtwjMZ4ec8Xnc=\", false, function () {\n  return [useSelector];\n});\n\n_c = MemberComp;\nexport default MemberComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MemberComp\");","map":{"version":3,"sources":["C:/Users/User/FullStack/fullStack1/fullstack/src/views/Member.js"],"names":["useState","useEffect","memberUtils","useSelector","subscriptionsUtils","moviesUtils","MemberComp","props","member","setMember","movie","setMovie","movies","setMovies","editMember","setEditMember","subscribe","setSubscribe","updatedMember","setUpdatedMember","permissions","state","user","Permissions","fetchData","allMovies","getMember","match","params","id","deleteMember","_id","updateMember","EditMember","Subscribe","subscription","MemberId","Movies","date","console","log","width","borderWidth","borderStyle","borderColor","Name","Email","City","e","target","value","map","item","includes"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport memberUtils from '../utils/membersUtils'\r\nimport { useSelector } from \"react-redux\";\r\nimport subscriptionsUtils from '../utils/subscriptionsUtils'\r\nimport moviesUtils from '../utils/moviesUtils'\r\n\r\nconst MemberComp = (props) => {\r\n  const [member, setMember] = useState({})\r\n  const [movie, setMovie] = useState({})\r\n  const [movies, setMovies] = useState([])\r\n  const [editMember, setEditMember] = useState(false)\r\n  const [subscribe, setSubscribe] = useState(false)\r\n  const [updatedMember, setUpdatedMember] = useState({})\r\n  const permissions = useSelector((state) => state.user.Permissions)\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let allMovies = await moviesUtils.allMovies();\r\n      setMovies(allMovies)\r\n\r\n      if (props.member) {\r\n        setMember(props.member);\r\n      }\r\n      else {\r\n        let member = await memberUtils.getMember(props.match.params.id);\r\n        setMember(member)\r\n      }\r\n    }\r\n    fetchData();\r\n  }, [props])\r\n\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      if (props.member) {\r\n        setMember(props.member);\r\n      }\r\n      else {\r\n        let member = await memberUtils.getMember(props.match.params.id);\r\n        setMember(member)\r\n      }\r\n    }\r\n    fetchData();\r\n  }, [props])\r\n\r\n  const deleteMember = async () => {\r\n    return await memberUtils.deleteMember(props.member._id);\r\n  }\r\n\r\n  const updateMember = async () => {\r\n    await memberUtils.EditMember(props.member._id, updatedMember);\r\n    setEditMember(!editMember)\r\n  }\r\n\r\n  const Subscribe = async () => {\r\n    let subscription = {\r\n      MemberId: member._id,\r\n      Movies: { \"movieId\": movie.id, \"date\": movie.date }\r\n    }\r\n    console.log(subscription);\r\n    // await subscriptionsUtils.AddSubscriptions(subscription);\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <div style={{ width: \"300px\", borderWidth: \"5px\", borderStyle: \"solid\", borderColor: \"blue\" }}>\r\n\r\n      Name : {member.Name} <br />\r\n      Email : {member.Email} <br />\r\n      City : {member.City} <br />\r\n\r\n      <div>\r\n        <h4> Movies Watched : </h4>\r\n        <input type=\"button\" value=\"Subscribe to new movie\" onClick={e => setSubscribe(!subscribe)} />\r\n      </div>\r\n      {subscribe &&\r\n        <div style={{ width: \"300px\", borderWidth: \"3px\", borderStyle: \"solid\", borderColor: \"black\" }}>\r\n\r\n          Movie :\r\n\r\n          <select name=\"movie\" id=\"movie\" required onChange={e => setMovie({...movie, id : e.target.value})}>\r\n            { movies.map((item) => {\r\n              return  <option key={item._id} value={item._id} > {item.Name} </option>\r\n            })}\r\n          </select><br/>\r\n\r\n          Date : <input type=\"date\" name=\"Date\" required onChange={e => setMovie({ ...movie, date: e.target.value })} /><br />\r\n\r\n          <input type=\"submit\" value=\"Subscribe\" onClick={Subscribe} />\r\n          <button type=\"button\" onClick={e => setSubscribe(!subscribe)}>Cancel</button><br /><br />\r\n        </div>\r\n      }\r\n\r\n      {permissions.includes(\"Update Subscriptions\") &&\r\n        <div>\r\n          <input type=\"button\" value=\"Edit\" onClick={e => setEditMember(!editMember)} />\r\n        </div>\r\n      }\r\n      {permissions.includes(\"Delete Subscriptions\") &&\r\n        <div>\r\n          <input type=\"button\" value=\"Delete\" onClick={deleteMember} /><br /><br />\r\n        </div>\r\n      }\r\n      <div>\r\n        {editMember &&\r\n          <div style={{ width: \"300px\", borderWidth: \"3px\", borderStyle: \"solid\", borderColor: \"black\" }}>\r\n            Name : <input name=\"Name\" value={member.Name} onChange={e => setUpdatedMember({ ...updatedMember, Name: e.target.value })} /> <br />\r\n            Email : <input name=\"Email\" value={member.Email} onChange={e => setUpdatedMember({ ...updatedMember, Email: e.target.value })} /><br />\r\n            City : <input name=\"City\" value={member.City} onChange={e => setUpdatedMember({ ...updatedMember, City: e.target.value })} /><br />\r\n            <input type=\"submit\" value=\"Save\" onClick={updateMember} />\r\n            <button type=\"button\" onClick={e => setEditMember(!editMember)}>Cancel</button>\r\n          </div>\r\n        }\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default MemberComp;"]},"metadata":{},"sourceType":"module"}