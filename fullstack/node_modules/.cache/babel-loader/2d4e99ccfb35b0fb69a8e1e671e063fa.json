{"ast":null,"code":"import axios from \"axios\";\n\nconst allSubscriptions = async () => {\n  let resp = await axios.get(\"http://localhost:8000/api/subscriptions\");\n  let subscriptions = resp.data;\n  return subscriptions;\n};\n\nconst AddSubscriptions = async obj => {\n  await axios.post(\"http://localhost:8000/api/subscriptions/AddSubscriptions\", obj);\n  return allSubscriptions();\n};\n\n_c = AddSubscriptions;\n\nconst getSubscriptionsByMovie = async movieID => {\n  let subscriptionsData = [];\n  let resp = await axios.get(\"http://localhost:8000/api/subscriptions\");\n  let subscriptions = resp.data;\n  subscriptions.forEach(element => {\n    if (element.Movies.movieId === movieID) {\n      subscriptionsData.push(element);\n    }\n  });\n  return subscriptionsData;\n};\n\nconst getSubscriptionsByMember = async memberID => {\n  let subscriptionsData = [];\n  let resp = await axios.get(\"http://localhost:8000/api/subscriptions\");\n  let subscriptions = resp.data;\n  subscriptions.forEach(element => {\n    if (element.MemberId === memberID) {\n      subscriptionsData.push(element);\n    }\n  });\n  return subscriptionsData;\n};\n\nconst subscriptionsUtils = {\n  allSubscriptions,\n  AddSubscriptions,\n  getSubscriptionsByMovie,\n  getSubscriptionsByMember\n};\nexport default subscriptionsUtils;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddSubscriptions\");","map":{"version":3,"sources":["C:/Users/User/FullStack/fullStack1/fullstack/src/utils/subscriptionsUtils.js"],"names":["axios","allSubscriptions","resp","get","subscriptions","data","AddSubscriptions","obj","post","getSubscriptionsByMovie","movieID","subscriptionsData","forEach","element","Movies","movieId","push","getSubscriptionsByMember","memberID","MemberId","subscriptionsUtils"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,gBAAgB,GAAG,YAAY;AACnC,MAAIC,IAAI,GAAG,MAAMF,KAAK,CAACG,GAAN,CAAU,yCAAV,CAAjB;AACA,MAAIC,aAAa,GAAGF,IAAI,CAACG,IAAzB;AACA,SAAOD,aAAP;AACD,CAJD;;AAMA,MAAME,gBAAgB,GAAG,MAAOC,GAAP,IAAe;AACtC,QAAMP,KAAK,CAACQ,IAAN,CACJ,0DADI,EAEJD,GAFI,CAAN;AAIA,SAAON,gBAAgB,EAAvB;AACD,CAND;;KAAMK,gB;;AAQN,MAAMG,uBAAuB,GAAG,MAAOC,OAAP,IAAmB;AACjD,MAAIC,iBAAiB,GAAG,EAAxB;AACA,MAAIT,IAAI,GAAG,MAAMF,KAAK,CAACG,GAAN,CAAU,yCAAV,CAAjB;AACA,MAAIC,aAAa,GAAGF,IAAI,CAACG,IAAzB;AACAD,EAAAA,aAAa,CAACQ,OAAd,CAAuBC,OAAD,IAAa;AACjC,QAAIA,OAAO,CAACC,MAAR,CAAeC,OAAf,KAA2BL,OAA/B,EAAwC;AACtCC,MAAAA,iBAAiB,CAACK,IAAlB,CAAuBH,OAAvB;AACD;AACF,GAJD;AAMA,SAAOF,iBAAP;AACD,CAXD;;AAaA,MAAMM,wBAAwB,GAAG,MAAOC,QAAP,IAAoB;AACnD,MAAIP,iBAAiB,GAAG,EAAxB;AACA,MAAIT,IAAI,GAAG,MAAMF,KAAK,CAACG,GAAN,CAAU,yCAAV,CAAjB;AACA,MAAIC,aAAa,GAAGF,IAAI,CAACG,IAAzB;AACAD,EAAAA,aAAa,CAACQ,OAAd,CAAuBC,OAAD,IAAa;AACjC,QAAIA,OAAO,CAACM,QAAR,KAAqBD,QAAzB,EAAmC;AACjCP,MAAAA,iBAAiB,CAACK,IAAlB,CAAuBH,OAAvB;AACD;AACF,GAJD;AAMA,SAAOF,iBAAP;AACD,CAXD;;AAaA,MAAMS,kBAAkB,GAAG;AACzBnB,EAAAA,gBADyB;AAEzBK,EAAAA,gBAFyB;AAGzBG,EAAAA,uBAHyB;AAIzBQ,EAAAA;AAJyB,CAA3B;AAMA,eAAeG,kBAAf","sourcesContent":["import axios from \"axios\";\r\n\r\nconst allSubscriptions = async () => {\r\n  let resp = await axios.get(\"http://localhost:8000/api/subscriptions\");\r\n  let subscriptions = resp.data;\r\n  return subscriptions;\r\n};\r\n\r\nconst AddSubscriptions = async (obj) => {\r\n  await axios.post(\r\n    \"http://localhost:8000/api/subscriptions/AddSubscriptions\",\r\n    obj\r\n  );\r\n  return allSubscriptions();\r\n};\r\n\r\nconst getSubscriptionsByMovie = async (movieID) => {\r\n  let subscriptionsData = [];\r\n  let resp = await axios.get(\"http://localhost:8000/api/subscriptions\");\r\n  let subscriptions = resp.data;\r\n  subscriptions.forEach((element) => {\r\n    if (element.Movies.movieId === movieID) {\r\n      subscriptionsData.push(element);\r\n    }\r\n  });\r\n\r\n  return subscriptionsData;\r\n};\r\n\r\nconst getSubscriptionsByMember = async (memberID) => {\r\n  let subscriptionsData = [];\r\n  let resp = await axios.get(\"http://localhost:8000/api/subscriptions\");\r\n  let subscriptions = resp.data;\r\n  subscriptions.forEach((element) => {\r\n    if (element.MemberId === memberID) {\r\n      subscriptionsData.push(element);\r\n    }\r\n  });\r\n\r\n  return subscriptionsData;\r\n};\r\n\r\nconst subscriptionsUtils = {\r\n  allSubscriptions,\r\n  AddSubscriptions,\r\n  getSubscriptionsByMovie,\r\n  getSubscriptionsByMember,\r\n};\r\nexport default subscriptionsUtils;\r\n"]},"metadata":{},"sourceType":"module"}