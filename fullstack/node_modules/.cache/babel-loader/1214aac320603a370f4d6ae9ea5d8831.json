{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\FullStack\\\\fullStack1\\\\fullstack\\\\src\\\\views\\\\Member.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport memberUtils from '../utils/membersUtils';\nimport { useSelector } from \"react-redux\";\nimport subscriptionsUtils from '../utils/subscriptionsUtils';\nimport moviesUtils from '../utils/moviesUtils';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MemberComp = props => {\n  _s();\n\n  const [member, setMember] = useState({});\n  const [movie, setMovie] = useState({});\n  const [movies, setMovies] = useState([]);\n  const [watchedMovies, setWatchedMovies] = useState([]);\n  const [editMember, setEditMember] = useState(false);\n  const [subscribe, setSubscribe] = useState(false);\n  const [updatedMember, setUpdatedMember] = useState({});\n  const permissions = useSelector(state => state.user.Permissions);\n  useEffect(() => {\n    async function fetchData() {\n      if (props.member) {\n        setMember(props.member);\n      } else {\n        let member = await memberUtils.getMember(props.match.params.id);\n        setMember(member);\n      }\n    }\n\n    fetchData();\n  }, [props]);\n  useEffect(() => {\n    async function fetchData() {\n      let allMovies = await moviesUtils.allMovies();\n      setMovies(allMovies);\n      let id = props.member ? props.member._id : props.match.params.id;\n      let MoviesWatched = await subscriptionsUtils.getSubscriptionsByMember(id);\n      setWatchedMovies(MoviesWatched);\n    }\n\n    fetchData();\n  }, []);\n  useEffect(() => {\n    async function fetchData() {\n      if (props.member) {\n        setMember(props.member);\n      } else {\n        let member = await memberUtils.getMember(props.match.params.id);\n        setMember(member);\n      }\n    }\n\n    fetchData();\n  }, [props]);\n\n  const deleteMember = async () => {\n    let id = props.member ? props.member._id : props.match.params.id;\n    return await memberUtils.deleteMember(id);\n  };\n\n  const updateMember = async () => {\n    await memberUtils.EditMember(props.member._id, updatedMember);\n    setEditMember(!editMember);\n  };\n\n  const Subscribe = async () => {\n    let subscription = {\n      MemberId: member._id,\n      Movies: {\n        \"movieId\": movie.id,\n        \"date\": movie.date\n      }\n    };\n    await subscriptionsUtils.AddSubscriptions(subscription);\n    setSubscribe(!subscribe);\n  };\n\n  const getMovieName = id => {\n    let movieData = movies.filter(x => x._id === id);\n    return movieData[0].Name;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"400px\",\n          borderWidth: \"3px\",\n          borderStyle: \"solid\",\n          borderColor: \"gray\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h5\",\n          component: \"div\",\n          children: [\"Name : \", member.Name, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 30\n          }, this), \"Email : \", member.Email, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 30\n          }, this), \"City : \", member.City, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"350px\",\n            borderWidth: \"5px\",\n            borderStyle: \"solid\",\n            borderColor: \"red\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \" Movies Watched : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 9\n          }, this), watchedMovies.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: watchedMovies.map(item => {\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/movie/\" + item.Movies.movieId,\n                  children: getMovieName(item.Movies.movieId)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 11\n                }, this), \",\", item.Movies.date, \" \"]\n              }, item._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 17\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"button\",\n            value: \"Subscribe to new movie\",\n            onClick: e => setSubscribe(!subscribe)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 7\n        }, this), subscribe && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"300px\",\n            borderWidth: \"3px\",\n            borderStyle: \"solid\",\n            borderColor: \"black\"\n          },\n          children: [\"Movie :\", /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"movie\",\n            id: \"movie\",\n            required: true,\n            onChange: e => setMovie({ ...movie,\n              id: e.target.value\n            }),\n            children: movies.map(item => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: item._id,\n                children: [item.Name, \" \"]\n              }, item._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 23\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 20\n          }, this), \"Date : \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            name: \"Date\",\n            required: true,\n            onChange: e => setMovie({ ...movie,\n              date: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 121\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Subscribe\",\n            onClick: Subscribe\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: e => setSubscribe(!subscribe),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 88\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 94\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }, this), permissions.includes(\"Update Subscriptions\") && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"button\",\n            value: \"Edit\",\n            onClick: e => setEditMember(!editMember)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 9\n        }, this), permissions.includes(\"Delete Subscriptions\") && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"button\",\n            value: \"Delete\",\n            onClick: deleteMember\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 72\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 78\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: editMember && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: \"300px\",\n              borderWidth: \"3px\",\n              borderStyle: \"solid\",\n              borderColor: \"black\"\n            },\n            children: [\"Name : \", /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"Name\",\n              value: member.Name,\n              onChange: e => setUpdatedMember({ ...updatedMember,\n                Name: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 20\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 139\n            }, this), \"Email : \", /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"Email\",\n              value: member.Email,\n              onChange: e => setUpdatedMember({ ...updatedMember,\n                Email: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 142\n            }, this), \"City : \", /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"City\",\n              value: member.City,\n              onChange: e => setUpdatedMember({ ...updatedMember,\n                City: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 138\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              value: \"Save\",\n              onClick: updateMember\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: e => setEditMember(!editMember),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MemberComp, \"+mGAaKcPX1k/TUw9OkXs2AkwHcI=\", false, function () {\n  return [useSelector];\n});\n\n_c = MemberComp;\nexport default MemberComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MemberComp\");","map":{"version":3,"sources":["C:/Users/User/FullStack/fullStack1/fullstack/src/views/Member.js"],"names":["useState","useEffect","memberUtils","useSelector","subscriptionsUtils","moviesUtils","Link","MemberComp","props","member","setMember","movie","setMovie","movies","setMovies","watchedMovies","setWatchedMovies","editMember","setEditMember","subscribe","setSubscribe","updatedMember","setUpdatedMember","permissions","state","user","Permissions","fetchData","getMember","match","params","id","allMovies","_id","MoviesWatched","getSubscriptionsByMember","deleteMember","updateMember","EditMember","Subscribe","subscription","MemberId","Movies","date","AddSubscriptions","getMovieName","movieData","filter","x","Name","width","borderWidth","borderStyle","borderColor","Email","City","length","map","item","movieId","e","target","value","includes"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport memberUtils from '../utils/membersUtils'\r\nimport { useSelector } from \"react-redux\";\r\nimport subscriptionsUtils from '../utils/subscriptionsUtils'\r\nimport moviesUtils from '../utils/moviesUtils'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst MemberComp = (props) => {\r\n  const [member, setMember] = useState({})\r\n  const [movie, setMovie] = useState({})\r\n  const [movies, setMovies] = useState([])\r\n  const [watchedMovies, setWatchedMovies] = useState([])\r\n  const [editMember, setEditMember] = useState(false)\r\n  const [subscribe, setSubscribe] = useState(false)\r\n  const [updatedMember, setUpdatedMember] = useState({})\r\n  const permissions = useSelector((state) => state.user.Permissions)\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n    \r\n      if (props.member) {\r\n        setMember(props.member);\r\n      }\r\n      else {\r\n        let member = await memberUtils.getMember(props.match.params.id);\r\n        setMember(member)\r\n      }\r\n    }\r\n    fetchData();\r\n  }, [props])\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let allMovies = await moviesUtils.allMovies();\r\n      setMovies(allMovies)\r\n\r\n      let id=props.member? props.member._id : props.match.params.id\r\n     let MoviesWatched= await subscriptionsUtils.getSubscriptionsByMember(id);\r\n     setWatchedMovies(MoviesWatched)}\r\n      fetchData();\r\n    },[])\r\n  \r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      if (props.member) {\r\n        setMember(props.member);\r\n      }\r\n      else {\r\n        let member = await memberUtils.getMember(props.match.params.id);\r\n        setMember(member)\r\n      }\r\n    }\r\n    fetchData();\r\n  }, [props])\r\n\r\n  const deleteMember = async () => {\r\n    let id=props.member? props.member._id : props.match.params.id\r\n    return await memberUtils.deleteMember(id);\r\n  }\r\n\r\n  const updateMember = async () => {\r\n    await memberUtils.EditMember(props.member._id, updatedMember);\r\n    setEditMember(!editMember)\r\n  }\r\n\r\n  const Subscribe = async () => {\r\n    let subscription = {\r\n      MemberId: member._id,\r\n      Movies: { \"movieId\": movie.id, \"date\": movie.date }\r\n    }\r\n    await subscriptionsUtils.AddSubscriptions(subscription);\r\n    setSubscribe(!subscribe)\r\n  }\r\n\r\n  const getMovieName=(id)=>{\r\n    let movieData= movies.filter(x=>x._id===id);\r\n    return movieData[0].Name;\r\n  }\r\n\r\n  return (\r\n    <Card >\r\n\r\n    <CardContent>\r\n      <div style={{ width: \"400px\", borderWidth: \"3px\", borderStyle: \"solid\", borderColor: \"gray\" }}>\r\n        <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n        Name : {member.Name} <br />\r\n      Email : {member.Email} <br />\r\n      City : {member.City} <br />\r\n        </Typography>\r\n\r\n\r\n      <div style={{ width: \"350px\", borderWidth: \"5px\", borderStyle: \"solid\", borderColor: \"red\" }}>\r\n        <h4> Movies Watched : </h4>\r\n        {watchedMovies.length >0 &&\r\n     <ul>\r\n       {watchedMovies.map((item)=>{\r\n         return <li key={item._id}>\r\n          <Link to={\"/movie/\" + item.Movies.movieId} >\r\n          {getMovieName(item.Movies.movieId)}\r\n            </Link>,\r\n           {item.Movies.date} </li>\r\n       })}\r\n     </ul>\r\n}\r\n        <input type=\"button\" value=\"Subscribe to new movie\" onClick={e => setSubscribe(!subscribe)} />\r\n      </div>\r\n      {subscribe &&\r\n        <div style={{ width: \"300px\", borderWidth: \"3px\", borderStyle: \"solid\", borderColor: \"black\" }}>\r\n\r\n          Movie :\r\n\r\n          <select name=\"movie\" id=\"movie\" required onChange={e => setMovie({...movie, id : e.target.value})}>\r\n            { movies.map((item) => {\r\n              return  <option key={item._id} value={item._id} >{item.Name} </option>\r\n            })}\r\n          </select><br/>\r\n\r\n          Date : <input type=\"date\" name=\"Date\" required onChange={e => setMovie({ ...movie, date: e.target.value })} /><br />\r\n\r\n          <input type=\"submit\" value=\"Subscribe\" onClick={Subscribe} />\r\n          <button type=\"button\" onClick={e => setSubscribe(!subscribe)}>Cancel</button><br /><br />\r\n        </div>\r\n      }\r\n\r\n      {permissions.includes(\"Update Subscriptions\") &&\r\n        <div>\r\n          <input type=\"button\" value=\"Edit\" onClick={e => setEditMember(!editMember)} />\r\n        </div>\r\n      }\r\n      {permissions.includes(\"Delete Subscriptions\") &&\r\n        <div>\r\n          <input type=\"button\" value=\"Delete\" onClick={deleteMember} /><br /><br />\r\n        </div>\r\n      }\r\n      <div>\r\n        {editMember &&\r\n          <div style={{ width: \"300px\", borderWidth: \"3px\", borderStyle: \"solid\", borderColor: \"black\" }}>\r\n            Name : <input name=\"Name\" value={member.Name} onChange={e => setUpdatedMember({ ...updatedMember, Name: e.target.value })} /> <br />\r\n            Email : <input name=\"Email\" value={member.Email} onChange={e => setUpdatedMember({ ...updatedMember, Email: e.target.value })} /><br />\r\n            City : <input name=\"City\" value={member.City} onChange={e => setUpdatedMember({ ...updatedMember, City: e.target.value })} /><br />\r\n            <input type=\"submit\" value=\"Save\" onClick={updateMember} />\r\n            <button type=\"button\" onClick={e => setEditMember(!editMember)}>Cancel</button>\r\n          </div>\r\n        }\r\n      </div>\r\n    </div>\r\n    </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default MemberComp;"]},"metadata":{},"sourceType":"module"}