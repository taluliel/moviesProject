{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\FullStack\\\\fullStack1\\\\fullstack\\\\src\\\\views\\\\AllMovies.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport moviesUtils from \"../utils/moviesUtils\";\nimport MovieComp from \"./Movie\";\nimport { useSelector } from \"react-redux\";\nimport TextField from \"@mui/material/TextField\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport Grid from \"@mui/material/Grid\";\nimport Button from \"@mui/material/Button\";\nimport Input from \"@mui/material/Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AllMoviesComp() {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [addMovie, setAddMovie] = useState(false);\n  const [movie, setMovie] = useState({});\n  const permissions = useSelector(state => state.user.Permissions);\n  useEffect(() => {\n    async function fetchData() {\n      let allMovies = await moviesUtils.allMovies();\n      setMovies(allMovies);\n    }\n\n    fetchData();\n  }, []);\n\n  const addNewMovie = async () => {\n    await moviesUtils.addMovie(movie);\n    setAddMovie(!addMovie);\n  };\n\n  const searchMovie = async movieName => {\n    console.log(movieName);\n\n    if (!movieName) {\n      let allMovies = await moviesUtils.allMovies();\n      setMovies(allMovies);\n    } else {\n      let allMovies = await moviesUtils.allMovies();\n      let searchedMovies = allMovies.filter(x => x.Name.includes(movieName));\n      setMovies(searchedMovies);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), movies && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n        disablePortal: true,\n        id: \"combo-box-demo\",\n        options: movies.map(option => option.Name),\n        sx: {\n          width: 300\n        },\n        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n          label: \"Search Movie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this),\n        onChange: (event, value) => searchMovie(value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), permissions.includes(\"Create Movies\") && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          size: \"small\",\n          color: \"success\",\n          onClick: e => setAddMovie(!addMovie),\n          children: \"Add Movie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: addMovie && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"300px\",\n            borderWidth: \"3px\",\n            borderStyle: \"solid\",\n            borderColor: \"black\"\n          },\n          children: [\"Name :\", \" \", /*#__PURE__*/_jsxDEV(Input, {\n            name: \"Name\",\n            required: true,\n            onChange: e => setMovie({ ...movie,\n              Name: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this), \"Genres :\", \" \", /*#__PURE__*/_jsxDEV(Input, {\n            name: \"Genres\",\n            required: true,\n            onChange: e => setMovie({ ...movie,\n              Genres: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this), \"Image URL :\", \" \", /*#__PURE__*/_jsxDEV(Input, {\n            name: \"Image\",\n            required: true,\n            onChange: e => setMovie({ ...movie,\n              Image: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }, this), \"Premiered :\", \" \", /*#__PURE__*/_jsxDEV(Input, {\n            type: \"Date\",\n            required: true,\n            name: \"Premiered\",\n            onChange: e => setMovie({ ...movie,\n              Premiered: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            color: \"success\",\n            variant: \"outlined\",\n            onClick: addNewMovie,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            color: \"inherit\",\n            variant: \"outlined\",\n            onClick: e => setAddMovie(!addMovie),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        spacing: 3,\n        children: movies.map(item => {\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 4,\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(MovieComp, {\n                movie: item\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 19\n            }, this)]\n          }, item._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AllMoviesComp, \"zygSs7m3pzqNYx3lwlsB+1rJ4d0=\", false, function () {\n  return [useSelector];\n});\n\n_c = AllMoviesComp;\nexport default AllMoviesComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllMoviesComp\");","map":{"version":3,"sources":["C:/Users/User/FullStack/fullStack1/fullstack/src/views/AllMovies.js"],"names":["useState","useEffect","moviesUtils","MovieComp","useSelector","TextField","Autocomplete","Grid","Button","Input","AllMoviesComp","movies","setMovies","addMovie","setAddMovie","movie","setMovie","permissions","state","user","Permissions","fetchData","allMovies","addNewMovie","searchMovie","movieName","console","log","searchedMovies","filter","x","Name","includes","map","option","width","params","event","value","e","borderWidth","borderStyle","borderColor","target","Genres","Image","Premiered","item","_id"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport moviesUtils from \"../utils/moviesUtils\";\r\nimport MovieComp from \"./Movie\";\r\nimport { useSelector } from \"react-redux\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Input from \"@mui/material/Input\";\r\n\r\nfunction AllMoviesComp() {\r\n  const [movies, setMovies] = useState([]);\r\n  const [addMovie, setAddMovie] = useState(false);\r\n  const [movie, setMovie] = useState({});\r\n  const permissions = useSelector((state) => state.user.Permissions);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let allMovies = await moviesUtils.allMovies();\r\n      setMovies(allMovies);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  const addNewMovie = async () => {\r\n    await moviesUtils.addMovie(movie);\r\n    setAddMovie(!addMovie);\r\n  };\r\n\r\n  const searchMovie = async (movieName) => {\r\n    console.log(movieName);\r\n\r\n    if (!movieName) {\r\n      let allMovies = await moviesUtils.allMovies();\r\n      setMovies(allMovies);\r\n    } else {\r\n      let allMovies = await moviesUtils.allMovies();\r\n      let searchedMovies = allMovies.filter((x) => x.Name.includes(movieName));\r\n      setMovies(searchedMovies);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Movies</h1>\r\n      <br />\r\n\r\n      {movies && (\r\n        <div>\r\n          <Autocomplete\r\n            disablePortal\r\n            id=\"combo-box-demo\"\r\n            options={movies.map((option) => option.Name)}\r\n            sx={{ width: 300 }}\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"Search Movie\" />\r\n            )}\r\n            onChange={(event, value) => searchMovie(value)}\r\n          />\r\n\r\n          {permissions.includes(\"Create Movies\") && (\r\n            <div>\r\n              <Button\r\n                variant=\"contained\"\r\n                size=\"small\"\r\n                color=\"success\"\r\n                onClick={(e) => setAddMovie(!addMovie)}\r\n              >\r\n                Add Movie\r\n              </Button>\r\n            </div>\r\n          )}\r\n\r\n          <div>\r\n            {addMovie && (\r\n              <div\r\n                style={{\r\n                  width: \"300px\",\r\n                  borderWidth: \"3px\",\r\n                  borderStyle: \"solid\",\r\n                  borderColor: \"black\",\r\n                }}\r\n              >\r\n                Name :{\" \"}\r\n                <Input\r\n                  name=\"Name\"\r\n                  required\r\n                  onChange={(e) => setMovie({ ...movie, Name: e.target.value })}\r\n                />{\" \"}\r\n                <br />\r\n                Genres :{\" \"}\r\n                <Input\r\n                  name=\"Genres\"\r\n                  required\r\n                  onChange={(e) =>\r\n                    setMovie({ ...movie, Genres: e.target.value })\r\n                  }\r\n                />\r\n                <br />\r\n                Image URL :{\" \"}\r\n                <Input\r\n                  name=\"Image\"\r\n                  required\r\n                  onChange={(e) =>\r\n                    setMovie({ ...movie, Image: e.target.value })\r\n                  }\r\n                />\r\n                <br />\r\n                Premiered :{\" \"}\r\n                <Input\r\n                  type=\"Date\"\r\n                  required\r\n                  name=\"Premiered\"\r\n                  onChange={(e) =>\r\n                    setMovie({ ...movie, Premiered: e.target.value })\r\n                  }\r\n                />\r\n                <br />\r\n                <br />\r\n                <Button\r\n                  size=\"small\"\r\n                  color=\"success\"\r\n                  variant=\"outlined\"\r\n                  onClick={addNewMovie}\r\n                >\r\n                  Save\r\n                </Button>\r\n                <Button\r\n                  size=\"small\"\r\n                  color=\"inherit\"\r\n                  variant=\"outlined\"\r\n                  onClick={(e) => setAddMovie(!addMovie)}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </div>\r\n            )}\r\n          </div>\r\n          <br />\r\n          <br />\r\n\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n            spacing={3}\r\n          >\r\n            {movies.map((item) => {\r\n              return (\r\n                <Grid key={item._id} item xs={4}>\r\n                  {\" \"}\r\n                  <div>\r\n                    <MovieComp movie={item} />\r\n                    <br />\r\n                  </div>\r\n                </Grid>\r\n              );\r\n            })}\r\n          </Grid>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AllMoviesComp;\r\n"]},"metadata":{},"sourceType":"module"}