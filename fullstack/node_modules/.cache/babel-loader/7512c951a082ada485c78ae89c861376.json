{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\FullStack\\\\fullStack1\\\\fullstack\\\\src\\\\views\\\\CreateAccount.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport loginUtlis from '../utils/loginUtils';\nimport { useDispatch } from \"react-redux\";\nimport Input from '@mui/material/Input';\nimport Button from '@mui/material/Button';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreateAccountComp(props) {\n  _s();\n\n  const [userName, setUserName] = useState('');\n  const [password, setPassword] = useState('');\n  const [msg, setMsg] = useState('');\n\n  const checkUser = async () => {\n    let user = await loginUtlis.newUser(userName);\n    console.log(user.password);\n\n    if (user) {\n      if (user.password === \" \") {\n        let Updateuser = await loginUtlis.UpdateUser(user, password);\n\n        if (Updateuser) {\n          setMsg(\"Created\");\n        } else {\n          setMsg(\"Created Failed\");\n        }\n      } else {\n        setMsg(\"User already exist!\");\n      }\n    } else {\n      setMsg(\"User not exist!\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Account Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), \"  \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 37\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      placeholder: \"UserName\",\n      type: \"text\",\n      name: \"Username\",\n      onChange: e => setUserName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 114\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      placeholder: \"Password\",\n      type: \"password\",\n      name: \"Password\",\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), \"  \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 118\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this), msg, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      size: \"small\",\n      variant: \"outlined\",\n      onClick: checkUser,\n      children: \"Create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: \"Return to Login Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateAccountComp, \"yResADl1BbbN6uQP/2U4mJQ5GAo=\");\n\n_c = CreateAccountComp;\nexport default CreateAccountComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateAccountComp\");","map":{"version":3,"sources":["C:/Users/User/FullStack/fullStack1/fullstack/src/views/CreateAccount.js"],"names":["useState","loginUtlis","useDispatch","Input","Button","Link","CreateAccountComp","props","userName","setUserName","password","setPassword","msg","setMsg","checkUser","user","newUser","console","log","Updateuser","UpdateUser","e","target","value"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAAQC,IAAR,QAAoB,kBAApB;;;AAEA,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAAA;;AAEhC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACY,GAAD,EAAMC,MAAN,IAAgBb,QAAQ,CAAC,EAAD,CAA9B;;AAGF,QAAMc,SAAS,GAAC,YAAU;AAEtB,QAAIC,IAAI,GAAE,MAAMd,UAAU,CAACe,OAAX,CAAmBR,QAAnB,CAAhB;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACL,QAAjB;;AACA,QAAIK,IAAJ,EAAU;AACR,UAAIA,IAAI,CAACL,QAAL,KAAkB,GAAtB,EAA2B;AACzB,YAAIS,UAAU,GAAG,MAAMlB,UAAU,CAACmB,UAAX,CAAsBL,IAAtB,EAA4BL,QAA5B,CAAvB;;AACA,YAAGS,UAAH,EAAc;AACZN,UAAAA,MAAM,CAAC,SAAD,CAAN;AACD,SAFD,MAGI;AACFA,UAAAA,MAAM,CAAC,gBAAD,CAAN;AACD;AAEF,OATD,MAUK;AACHA,QAAAA,MAAM,CAAC,qBAAD,CAAN;AACD;AACF,KAdD,MAeK;AACHA,MAAAA,MAAM,CAAC,iBAAD,CAAN;AACD;AACJ,GAtBD;;AAwBE,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,qBAEgC;AAAA;AAAA;AAAA;AAAA,YAFhC,eAGE,QAAC,KAAD;AAAQ,MAAA,WAAW,EAAC,UAApB;AAAgC,MAAA,IAAI,EAAC,MAArC;AAA4C,MAAA,IAAI,EAAC,UAAjD;AAA4D,MAAA,QAAQ,EAAEQ,CAAC,IAAIZ,WAAW,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV;AAAtF;AAAA;AAAA;AAAA;AAAA,YAHF,oBAG6G;AAAA;AAAA;AAAA;AAAA,YAH7G,eAIE,QAAC,KAAD;AAAQ,MAAA,WAAW,EAAC,UAApB;AAA+B,MAAA,IAAI,EAAC,UAApC;AAA+C,MAAA,IAAI,EAAC,UAApD;AAAgE,MAAA,QAAQ,EAAEF,CAAC,IAAIV,WAAW,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV;AAA1F;AAAA;AAAA;AAAA;AAAA,YAJF,qBAIiH;AAAA;AAAA;AAAA;AAAA,YAJjH,eAKA;AAAA;AAAA;AAAA;AAAA,YALA,EAMCX,GAND,eAMK;AAAA;AAAA;AAAA;AAAA,YANL,eAMU;AAAA;AAAA;AAAA;AAAA,YANV,eAOA,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,OAAb;AAAqB,MAAA,OAAO,EAAC,UAA7B;AAAwC,MAAA,OAAO,EAAEE,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPA,eAQA;AAAA;AAAA;AAAA;AAAA,YARA,eAQK;AAAA;AAAA;AAAA;AAAA,YARL,eASD,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATC;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GA7CQR,iB;;KAAAA,iB;AA+CT,eAAeA,iBAAf","sourcesContent":["import {useState} from 'react'\r\nimport loginUtlis from '../utils/loginUtils'\r\nimport { useDispatch } from \"react-redux\";\r\nimport Input from '@mui/material/Input';\r\nimport Button from '@mui/material/Button';\r\nimport {Link } from 'react-router-dom';\r\n\r\nfunction CreateAccountComp(props) {\r\n\r\n  const [userName, setUserName] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [msg, setMsg] = useState('')\r\n\r\n\r\nconst checkUser=async() =>{\r\n\r\n    let user= await loginUtlis.newUser(userName);\r\n    console.log(user.password)\r\n    if (user) {\r\n      if (user.password === \" \") {\r\n        let Updateuser = await loginUtlis.UpdateUser(user, password);\r\n        if(Updateuser){\r\n          setMsg(\"Created\")\r\n        }\r\n        else{\r\n          setMsg(\"Created Failed\")\r\n        }\r\n        \r\n      }\r\n      else {\r\n        setMsg(\"User already exist!\")\r\n      }\r\n    }\r\n    else {\r\n      setMsg(\"User not exist!\")\r\n    }\r\n}\r\n\r\n  return (\r\n    <div className=\"App\">\r\n\r\n      <h2>Create Account Page</h2>  <br/>\r\n      <Input  placeholder=\"UserName\"  type=\"text\" name=\"Username\" onChange={e => setUserName(e.target.value)} /> <br/>\r\n      <Input  placeholder=\"Password\" type=\"password\" name=\"Password\"  onChange={e => setPassword(e.target.value)}/>  <br/>\r\n    <br/>\r\n    {msg}<br/><br/>\r\n    <Button size=\"small\" variant=\"outlined\" onClick={checkUser}>Create</Button>\r\n    <br/><br/>\r\n   <Link to=\"/\">Return to Login Page</Link>\r\n    </div>\r\n \r\n  );\r\n}\r\n\r\nexport default CreateAccountComp;\r\n"]},"metadata":{},"sourceType":"module"}