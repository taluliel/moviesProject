{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\FullStack\\\\fullStack1\\\\fullstack\\\\src\\\\views\\\\Member.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport memberUtils from '../utils/membersUtils';\nimport { useSelector } from \"react-redux\";\nimport subscriptionsUtils from '../utils/subscriptionsUtils';\nimport moviesUtils from '../utils/moviesUtils';\nimport { Link } from 'react-router-dom';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Input from '@mui/material/Input';\nimport Container from '@mui/material/Container';\nimport Select from '@mui/material/Select';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport MovieCreationTwoToneIcon from '@mui/icons-material/MovieCreationTwoTone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MemberComp = props => {\n  _s();\n\n  const [member, setMember] = useState({});\n  const [movie, setMovie] = useState({});\n  const [movies, setMovies] = useState([]);\n  const [watchedMovies, setWatchedMovies] = useState([]);\n  const [editMember, setEditMember] = useState(false);\n  const [subscribe, setSubscribe] = useState(false);\n  const [updatedMember, setUpdatedMember] = useState({});\n  const permissions = useSelector(state => state.user.Permissions);\n  useEffect(() => {\n    async function fetchData() {\n      if (props.member) {\n        setMember(props.member);\n      } else {\n        let member = await memberUtils.getMember(props.match.params.id);\n        setMember(member);\n      }\n    }\n\n    fetchData();\n  }, [props]);\n  useEffect(() => {\n    async function fetchData() {\n      let allMovies = await moviesUtils.allMovies();\n      setMovies(allMovies);\n      let id = props.member ? props.member._id : props.match.params.id;\n      let MoviesWatched = await subscriptionsUtils.getSubscriptionsByMember(id);\n      setWatchedMovies(MoviesWatched);\n    }\n\n    fetchData();\n  }, []);\n  useEffect(() => {\n    async function fetchData() {\n      if (props.member) {\n        setMember(props.member);\n      } else {\n        let member = await memberUtils.getMember(props.match.params.id);\n        setMember(member);\n      }\n    }\n\n    fetchData();\n  }, [props]);\n\n  const deleteMember = async () => {\n    let id = props.member ? props.member._id : props.match.params.id;\n    return await memberUtils.deleteMember(id);\n  };\n\n  const updateMember = async () => {\n    await memberUtils.EditMember(props.member._id, updatedMember);\n    setEditMember(!editMember);\n  };\n\n  const Subscribe = async () => {\n    let subscription = {\n      MemberId: member._id,\n      Movies: {\n        \"movieId\": movie.id,\n        \"date\": movie.date\n      }\n    };\n    await subscriptionsUtils.AddSubscriptions(subscription);\n    setSubscribe(!subscribe);\n  };\n\n  const getMovieName = id => {\n    let movieData = movies.filter(x => x._id === id);\n    return movieData[0].Name;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"400px\",\n          borderWidth: \"3px\",\n          borderStyle: \"solid\",\n          borderColor: \"gray\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          component: \"div\",\n          children: [\"Name : \", member.Name, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 34\n          }, this), \"Email : \", member.Email, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 36\n          }, this), \"City : \", member.City, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          component: \"span\",\n          sx: {\n            p: 2,\n            border: '1px dashed grey'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \" Movies Watched : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), watchedMovies.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: watchedMovies.map(item => {\n              return;\n\n              /*#__PURE__*/\n              _jsxDEV(\"div\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(MovieCreationTwoToneIcon, {}, item._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/movie/\" + item.Movies.movieId,\n                  children: getMovieName(item.Movies.movieId)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 21\n                }, this), \",\", item.Movies.date, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            size: \"small\",\n            color: \"success\",\n            onClick: e => setSubscribe(!subscribe),\n            children: \"Subscribe to new movie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), subscribe && /*#__PURE__*/_jsxDEV(Container, {\n            component: \"span\",\n            sx: {\n              p: 2,\n              border: '1px dashed grey'\n            },\n            children: [\"Movie :\", /*#__PURE__*/_jsxDEV(FormControl, {\n              variant: \"standard\",\n              sx: {\n                m: 1,\n                minWidth: 120\n              },\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"demo-simple-select-label\",\n                id: \"demo-simple-select\",\n                value: movie.Name,\n                label: \"Movie\",\n                onChange: e => setMovie({ ...movie,\n                  id: e.target.value\n                }),\n                children: movies.map(item => {\n                  return /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: item._id,\n                    children: [item.Name, \" \"]\n                  }, item._id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 137,\n                    columnNumber: 30\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 32\n            }, this), \"Date : \", /*#__PURE__*/_jsxDEV(Input, {\n              required: true,\n              type: \"date\",\n              name: \"Date\",\n              onChange: e => setMovie({ ...movie,\n                date: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 127\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              size: \"small\",\n              color: \"success\",\n              variant: \"outlined\",\n              onClick: Subscribe,\n              children: \"Subscribe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              color: \"inherit\",\n              size: \"small\",\n              onClick: e => setSubscribe(!subscribe),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          children: [permissions.includes(\"Update Subscriptions\") && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              size: \"small\",\n              variant: \"outlined\",\n              onClick: e => setEditMember(!editMember),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this), permissions.includes(\"Delete Subscriptions\") && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              size: \"small\",\n              variant: \"outlined\",\n              color: \"error\",\n              onClick: deleteMember,\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: editMember && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: \"300px\",\n              borderWidth: \"3px\",\n              borderStyle: \"solid\",\n              borderColor: \"darkGray\"\n            },\n            children: [\"Name : \", /*#__PURE__*/_jsxDEV(Input, {\n              name: \"Name\",\n              defaultValue: member.Name,\n              onChange: e => setUpdatedMember({ ...updatedMember,\n                Name: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 24\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 150\n            }, this), \"Email : \", /*#__PURE__*/_jsxDEV(Input, {\n              name: \"Email\",\n              defaultValue: member.Email,\n              onChange: e => setUpdatedMember({ ...updatedMember,\n                Email: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 153\n            }, this), \"City : \", /*#__PURE__*/_jsxDEV(Input, {\n              name: \"City\",\n              defaultValue: member.City,\n              onChange: e => setUpdatedMember({ ...updatedMember,\n                City: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 149\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              size: \"small\",\n              color: \"success\",\n              variant: \"outlined\",\n              onClick: updateMember,\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              size: \"small\",\n              variant: \"outlined\",\n              color: \"inherit\",\n              onClick: e => setEditMember(!editMember),\n              children: \"Cencel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MemberComp, \"+mGAaKcPX1k/TUw9OkXs2AkwHcI=\", false, function () {\n  return [useSelector];\n});\n\n_c = MemberComp;\nexport default MemberComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MemberComp\");","map":{"version":3,"sources":["C:/Users/User/FullStack/fullStack1/fullstack/src/views/Member.js"],"names":["useState","useEffect","memberUtils","useSelector","subscriptionsUtils","moviesUtils","Link","Card","CardActions","CardContent","Button","Typography","Input","Container","Select","MenuItem","FormControl","MovieCreationTwoToneIcon","MemberComp","props","member","setMember","movie","setMovie","movies","setMovies","watchedMovies","setWatchedMovies","editMember","setEditMember","subscribe","setSubscribe","updatedMember","setUpdatedMember","permissions","state","user","Permissions","fetchData","getMember","match","params","id","allMovies","_id","MoviesWatched","getSubscriptionsByMember","deleteMember","updateMember","EditMember","Subscribe","subscription","MemberId","Movies","date","AddSubscriptions","getMovieName","movieData","filter","x","Name","width","borderWidth","borderStyle","borderColor","Email","City","p","border","length","map","item","movieId","e","m","minWidth","target","value","includes"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,kBAAP,MAA+B,6BAA/B;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,wBAAP,MAAqC,0CAArC;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBrB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACsB,KAAD,EAAQC,QAAR,IAAoBvB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACwB,MAAD,EAASC,SAAT,IAAsBzB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAAC0B,aAAD,EAAgBC,gBAAhB,IAAoC3B,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAAC4B,UAAD,EAAaC,aAAb,IAA8B7B,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAAC8B,SAAD,EAAYC,YAAZ,IAA4B/B,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACgC,aAAD,EAAgBC,gBAAhB,IAAoCjC,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAMkC,WAAW,GAAG/B,WAAW,CAAEgC,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWC,WAAvB,CAA/B;AAEApC,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeqC,SAAf,GAA2B;AAEzB,UAAInB,KAAK,CAACC,MAAV,EAAkB;AAChBC,QAAAA,SAAS,CAACF,KAAK,CAACC,MAAP,CAAT;AACD,OAFD,MAGK;AACH,YAAIA,MAAM,GAAG,MAAMlB,WAAW,CAACqC,SAAZ,CAAsBpB,KAAK,CAACqB,KAAN,CAAYC,MAAZ,CAAmBC,EAAzC,CAAnB;AACArB,QAAAA,SAAS,CAACD,MAAD,CAAT;AACD;AACF;;AACDkB,IAAAA,SAAS;AACV,GAZQ,EAYN,CAACnB,KAAD,CAZM,CAAT;AAcAlB,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeqC,SAAf,GAA2B;AACzB,UAAIK,SAAS,GAAG,MAAMtC,WAAW,CAACsC,SAAZ,EAAtB;AACAlB,MAAAA,SAAS,CAACkB,SAAD,CAAT;AAEA,UAAID,EAAE,GAAGvB,KAAK,CAACC,MAAN,GAAeD,KAAK,CAACC,MAAN,CAAawB,GAA5B,GAAkCzB,KAAK,CAACqB,KAAN,CAAYC,MAAZ,CAAmBC,EAA9D;AACA,UAAIG,aAAa,GAAG,MAAMzC,kBAAkB,CAAC0C,wBAAnB,CAA4CJ,EAA5C,CAA1B;AACAf,MAAAA,gBAAgB,CAACkB,aAAD,CAAhB;AACD;;AACDP,IAAAA,SAAS;AACV,GAVQ,EAUN,EAVM,CAAT;AAaArC,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeqC,SAAf,GAA2B;AACzB,UAAInB,KAAK,CAACC,MAAV,EAAkB;AAChBC,QAAAA,SAAS,CAACF,KAAK,CAACC,MAAP,CAAT;AACD,OAFD,MAGK;AACH,YAAIA,MAAM,GAAG,MAAMlB,WAAW,CAACqC,SAAZ,CAAsBpB,KAAK,CAACqB,KAAN,CAAYC,MAAZ,CAAmBC,EAAzC,CAAnB;AACArB,QAAAA,SAAS,CAACD,MAAD,CAAT;AACD;AACF;;AACDkB,IAAAA,SAAS;AACV,GAXQ,EAWN,CAACnB,KAAD,CAXM,CAAT;;AAaA,QAAM4B,YAAY,GAAG,YAAY;AAC/B,QAAIL,EAAE,GAAGvB,KAAK,CAACC,MAAN,GAAeD,KAAK,CAACC,MAAN,CAAawB,GAA5B,GAAkCzB,KAAK,CAACqB,KAAN,CAAYC,MAAZ,CAAmBC,EAA9D;AACA,WAAO,MAAMxC,WAAW,CAAC6C,YAAZ,CAAyBL,EAAzB,CAAb;AACD,GAHD;;AAKA,QAAMM,YAAY,GAAG,YAAY;AAC/B,UAAM9C,WAAW,CAAC+C,UAAZ,CAAuB9B,KAAK,CAACC,MAAN,CAAawB,GAApC,EAAyCZ,aAAzC,CAAN;AACAH,IAAAA,aAAa,CAAC,CAACD,UAAF,CAAb;AACD,GAHD;;AAKA,QAAMsB,SAAS,GAAG,YAAY;AAC5B,QAAIC,YAAY,GAAG;AACjBC,MAAAA,QAAQ,EAAEhC,MAAM,CAACwB,GADA;AAEjBS,MAAAA,MAAM,EAAE;AAAE,mBAAW/B,KAAK,CAACoB,EAAnB;AAAuB,gBAAQpB,KAAK,CAACgC;AAArC;AAFS,KAAnB;AAIA,UAAMlD,kBAAkB,CAACmD,gBAAnB,CAAoCJ,YAApC,CAAN;AACApB,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD,GAPD;;AASA,QAAM0B,YAAY,GAAId,EAAD,IAAQ;AAC3B,QAAIe,SAAS,GAAGjC,MAAM,CAACkC,MAAP,CAAcC,CAAC,IAAIA,CAAC,CAACf,GAAF,KAAUF,EAA7B,CAAhB;AACA,WAAOe,SAAS,CAAC,CAAD,CAAT,CAAaG,IAApB;AACD,GAHD;;AAKA,sBACE,QAAC,IAAD;AAAA,2BAEE,QAAC,WAAD;AAAA,6BACE;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE,OAAT;AAAkBC,UAAAA,WAAW,EAAE,KAA/B;AAAsCC,UAAAA,WAAW,EAAE,OAAnD;AAA4DC,UAAAA,WAAW,EAAE;AAAzE,SAAZ;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,YAAY,MAAxB;AAAyB,UAAA,SAAS,EAAC,KAAnC;AAAA,gCACU5C,MAAM,CAACwC,IADjB,oBACuB;AAAA;AAAA;AAAA;AAAA,kBADvB,cAEWxC,MAAM,CAAC6C,KAFlB,oBAEyB;AAAA;AAAA;AAAA;AAAA,kBAFzB,aAGU7C,MAAM,CAAC8C,IAHjB,oBAGuB;AAAA;AAAA;AAAA;AAAA,kBAHvB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE,QAAC,SAAD;AAAW,UAAA,SAAS,EAAC,MAArB;AAA4B,UAAA,EAAE,EAAE;AAAEC,YAAAA,CAAC,EAAE,CAAL;AAAQC,YAAAA,MAAM,EAAE;AAAhB,WAAhC;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEG1C,aAAa,CAAC2C,MAAd,GAAuB,CAAvB,iBACC;AAAA,sBACG3C,aAAa,CAAC4C,GAAd,CAAmBC,IAAD,IAAU;AAC3B;;AACA;AAAA;AAAA,6CAAM,QAAC,wBAAD,MAA+BA,IAAI,CAAC3B,GAApC;AAAA;AAAA;AAAA;AAAA,wBAAN,eACE,QAAC,IAAD;AAAM,kBAAA,EAAE,EAAE,YAAY2B,IAAI,CAAClB,MAAL,CAAYmB,OAAlC;AAAA,4BACGhB,YAAY,CAACe,IAAI,CAAClB,MAAL,CAAYmB,OAAb;AADf;AAAA;AAAA;AAAA;AAAA,wBADF,OAIGD,IAAI,CAAClB,MAAL,CAAYC,IAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAKD,aAPA;AADH;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAeE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,WAAhB;AAA4B,YAAA,IAAI,EAAC,OAAjC;AAAyC,YAAA,KAAK,EAAC,SAA/C;AAAyD,YAAA,OAAO,EAAEmB,CAAC,IAAI1C,YAAY,CAAC,CAACD,SAAF,CAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfF,eAkBE;AAAA;AAAA;AAAA;AAAA,kBAlBF,EAmBGA,SAAS,iBACR,QAAC,SAAD;AAAW,YAAA,SAAS,EAAC,MAArB;AAA4B,YAAA,EAAE,EAAE;AAAEqC,cAAAA,CAAC,EAAE,CAAL;AAAQC,cAAAA,MAAM,EAAE;AAAhB,aAAhC;AAAA,+CAGE,QAAC,WAAD;AAAa,cAAA,OAAO,EAAC,UAArB;AAAgC,cAAA,EAAE,EAAE;AAAEM,gBAAAA,CAAC,EAAE,CAAL;AAAQC,gBAAAA,QAAQ,EAAE;AAAlB,eAApC;AAAA,qCACE,QAAC,MAAD;AACE,gBAAA,OAAO,EAAC,0BADV;AAEE,gBAAA,EAAE,EAAC,oBAFL;AAGE,gBAAA,KAAK,EAAErD,KAAK,CAACsC,IAHf;AAIE,gBAAA,KAAK,EAAC,OAJR;AAKE,gBAAA,QAAQ,EAAEa,CAAC,IAAIlD,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAYoB,kBAAAA,EAAE,EAAE+B,CAAC,CAACG,MAAF,CAASC;AAAzB,iBAAD,CALzB;AAAA,0BAOGrD,MAAM,CAAC8C,GAAP,CAAYC,IAAD,IAAU;AACpB,sCAAO,QAAC,QAAD;AAAyB,oBAAA,KAAK,EAAEA,IAAI,CAAC3B,GAArC;AAAA,+BAA4C2B,IAAI,CAACX,IAAjD;AAAA,qBAAeW,IAAI,CAAC3B,GAApB;AAAA;AAAA;AAAA;AAAA,0BAAP;AACD,iBAFA;AAPH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAHF,oBAeiB;AAAA;AAAA;AAAA;AAAA,oBAfjB,0BAgBS,QAAC,KAAD;AAAO,cAAA,QAAQ,MAAf;AAAgB,cAAA,IAAI,EAAC,MAArB;AAA4B,cAAA,IAAI,EAAC,MAAjC;AAAwC,cAAA,QAAQ,EAAE6B,CAAC,IAAIlD,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAYgC,gBAAAA,IAAI,EAAEmB,CAAC,CAACG,MAAF,CAASC;AAA3B,eAAD;AAA/D;AAAA;AAAA;AAAA;AAAA,oBAhBT,eAgBgH;AAAA;AAAA;AAAA;AAAA,oBAhBhH,eAiBE;AAAA;AAAA;AAAA;AAAA,oBAjBF,eAkBE,QAAC,MAAD;AAAQ,cAAA,IAAI,EAAC,OAAb;AAAqB,cAAA,KAAK,EAAC,SAA3B;AAAqC,cAAA,OAAO,EAAC,UAA7C;AAAwD,cAAA,OAAO,EAAE3B,SAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAlBF,eAmBE,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,UAAhB;AAA2B,cAAA,KAAK,EAAC,SAAjC;AAA2C,cAAA,IAAI,EAAC,OAAhD;AAAwD,cAAA,OAAO,EAAEuB,CAAC,IAAI1C,YAAY,CAAC,CAACD,SAAF,CAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,kBApBJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,eAoDE,QAAC,WAAD;AAAA,qBACGI,WAAW,CAAC4C,QAAZ,CAAqB,sBAArB,kBACC;AAAA,mCACE,QAAC,MAAD;AAAQ,cAAA,IAAI,EAAC,OAAb;AAAqB,cAAA,OAAO,EAAC,UAA7B;AAAwC,cAAA,OAAO,EAAEL,CAAC,IAAI5C,aAAa,CAAC,CAACD,UAAF,CAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAMGM,WAAW,CAAC4C,QAAZ,CAAqB,sBAArB,kBACC;AAAA,mCACE,QAAC,MAAD;AAAQ,cAAA,IAAI,EAAC,OAAb;AAAqB,cAAA,OAAO,EAAC,UAA7B;AAAwC,cAAA,KAAK,EAAC,OAA9C;AAAsD,cAAA,OAAO,EAAE/B,YAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBApDF,eAgEE;AAAA,oBACGnB,UAAU,iBACT;AAAK,YAAA,KAAK,EAAE;AAAEiC,cAAAA,KAAK,EAAE,OAAT;AAAkBC,cAAAA,WAAW,EAAE,KAA/B;AAAsCC,cAAAA,WAAW,EAAE,OAAnD;AAA4DC,cAAAA,WAAW,EAAE;AAAzE,aAAZ;AAAA,+CACS,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,YAAY,EAAE5C,MAAM,CAACwC,IAAxC;AAA8C,cAAA,QAAQ,EAAEa,CAAC,IAAIxC,gBAAgB,CAAC,EAAE,GAAGD,aAAL;AAAoB4B,gBAAAA,IAAI,EAAEa,CAAC,CAACG,MAAF,CAASC;AAAnC,eAAD;AAA7E;AAAA;AAAA;AAAA;AAAA,oBADT,oBACuI;AAAA;AAAA;AAAA;AAAA,oBADvI,2BAEU,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,OAAZ;AAAoB,cAAA,YAAY,EAAEzD,MAAM,CAAC6C,KAAzC;AAAgD,cAAA,QAAQ,EAAEQ,CAAC,IAAIxC,gBAAgB,CAAC,EAAE,GAAGD,aAAL;AAAoBiC,gBAAAA,KAAK,EAAEQ,CAAC,CAACG,MAAF,CAASC;AAApC,eAAD;AAA/E;AAAA;AAAA;AAAA;AAAA,oBAFV,eAE0I;AAAA;AAAA;AAAA;AAAA,oBAF1I,0BAGS,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,YAAY,EAAEzD,MAAM,CAAC8C,IAAxC;AAA8C,cAAA,QAAQ,EAAEO,CAAC,IAAIxC,gBAAgB,CAAC,EAAE,GAAGD,aAAL;AAAoBkC,gBAAAA,IAAI,EAAEO,CAAC,CAACG,MAAF,CAASC;AAAnC,eAAD;AAA7E;AAAA;AAAA;AAAA;AAAA,oBAHT,eAGsI;AAAA;AAAA;AAAA;AAAA,oBAHtI,eAIE,QAAC,MAAD;AAAQ,cAAA,IAAI,EAAC,OAAb;AAAqB,cAAA,KAAK,EAAC,SAA3B;AAAqC,cAAA,OAAO,EAAC,UAA7C;AAAwD,cAAA,OAAO,EAAE7B,YAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE,QAAC,MAAD;AAAQ,cAAA,IAAI,EAAC,OAAb;AAAqB,cAAA,OAAO,EAAC,UAA7B;AAAwC,cAAA,KAAK,EAAC,SAA9C;AAAwD,cAAA,OAAO,EAAEyB,CAAC,IAAI5C,aAAa,CAAC,CAACD,UAAF,CAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,gBAhEF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UADF;AAmFD,CA7JD;;GAAMV,U;UAQgBf,W;;;KARhBe,U;AAiKN,eAAeA,UAAf","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport memberUtils from '../utils/membersUtils'\r\nimport { useSelector } from \"react-redux\";\r\nimport subscriptionsUtils from '../utils/subscriptionsUtils'\r\nimport moviesUtils from '../utils/moviesUtils'\r\nimport { Link } from 'react-router-dom';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport Input from '@mui/material/Input';\r\nimport Container from '@mui/material/Container';\r\nimport Select from '@mui/material/Select';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport MovieCreationTwoToneIcon from '@mui/icons-material/MovieCreationTwoTone';\r\n\r\nconst MemberComp = (props) => {\r\n  const [member, setMember] = useState({})\r\n  const [movie, setMovie] = useState({})\r\n  const [movies, setMovies] = useState([])\r\n  const [watchedMovies, setWatchedMovies] = useState([])\r\n  const [editMember, setEditMember] = useState(false)\r\n  const [subscribe, setSubscribe] = useState(false)\r\n  const [updatedMember, setUpdatedMember] = useState({})\r\n  const permissions = useSelector((state) => state.user.Permissions)\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n\r\n      if (props.member) {\r\n        setMember(props.member);\r\n      }\r\n      else {\r\n        let member = await memberUtils.getMember(props.match.params.id);\r\n        setMember(member)\r\n      }\r\n    }\r\n    fetchData();\r\n  }, [props])\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let allMovies = await moviesUtils.allMovies();\r\n      setMovies(allMovies)\r\n\r\n      let id = props.member ? props.member._id : props.match.params.id\r\n      let MoviesWatched = await subscriptionsUtils.getSubscriptionsByMember(id);\r\n      setWatchedMovies(MoviesWatched)\r\n    }\r\n    fetchData();\r\n  }, [])\r\n\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      if (props.member) {\r\n        setMember(props.member);\r\n      }\r\n      else {\r\n        let member = await memberUtils.getMember(props.match.params.id);\r\n        setMember(member)\r\n      }\r\n    }\r\n    fetchData();\r\n  }, [props])\r\n\r\n  const deleteMember = async () => {\r\n    let id = props.member ? props.member._id : props.match.params.id\r\n    return await memberUtils.deleteMember(id);\r\n  }\r\n\r\n  const updateMember = async () => {\r\n    await memberUtils.EditMember(props.member._id, updatedMember);\r\n    setEditMember(!editMember)\r\n  }\r\n\r\n  const Subscribe = async () => {\r\n    let subscription = {\r\n      MemberId: member._id,\r\n      Movies: { \"movieId\": movie.id, \"date\": movie.date }\r\n    }\r\n    await subscriptionsUtils.AddSubscriptions(subscription);\r\n    setSubscribe(!subscribe)\r\n  }\r\n\r\n  const getMovieName = (id) => {\r\n    let movieData = movies.filter(x => x._id === id);\r\n    return movieData[0].Name;\r\n  }\r\n\r\n  return (\r\n    <Card >\r\n\r\n      <CardContent>\r\n        <div style={{ width: \"400px\", borderWidth: \"3px\", borderStyle: \"solid\", borderColor: \"gray\" }}>\r\n          <Typography gutterBottom component=\"div\">\r\n            Name : {member.Name} <br />\r\n            Email : {member.Email} <br />\r\n            City : {member.City} <br />\r\n          </Typography>\r\n\r\n\r\n          <Container component=\"span\" sx={{ p: 2, border: '1px dashed grey' }}>\r\n            <h4> Movies Watched : </h4>\r\n            {watchedMovies.length > 0 &&\r\n              <div>\r\n                {watchedMovies.map((item) => {\r\n                  return\r\n                  <div> <MovieCreationTwoToneIcon key={item._id} />\r\n                    <Link to={\"/movie/\" + item.Movies.movieId} >\r\n                      {getMovieName(item.Movies.movieId)}\r\n                    </Link>,\r\n                    {item.Movies.date} </div>\r\n                })}\r\n\r\n              </div>\r\n            }\r\n            <Button variant=\"contained\" size=\"small\" color=\"success\" onClick={e => setSubscribe(!subscribe)}>\r\n              Subscribe to new movie\r\n            </Button>\r\n            <br />\r\n            {subscribe &&\r\n              <Container component=\"span\" sx={{ p: 2, border: '1px dashed grey' }}>\r\n\r\n                Movie :\r\n                <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={movie.Name}\r\n                    label=\"Movie\"\r\n                    onChange={e => setMovie({ ...movie, id: e.target.value })}\r\n                  >\r\n                    {movies.map((item) => {\r\n                      return <MenuItem key={item._id} value={item._id} >{item.Name} </MenuItem>\r\n                    })}\r\n                  </Select>\r\n                </FormControl> <br />\r\n                Date : <Input required type=\"date\" name=\"Date\" onChange={e => setMovie({ ...movie, date: e.target.value })} /><br />\r\n                <br />\r\n                <Button size=\"small\" color=\"success\" variant=\"outlined\" onClick={Subscribe}>Subscribe</Button>\r\n                <Button variant=\"outlined\" color=\"inherit\" size=\"small\" onClick={e => setSubscribe(!subscribe)}>Cancel</Button>\r\n              </Container>\r\n            }\r\n          </Container>\r\n\r\n          <CardActions>\r\n            {permissions.includes(\"Update Subscriptions\") &&\r\n              <div>\r\n                <Button size=\"small\" variant=\"outlined\" onClick={e => setEditMember(!editMember)}>Edit</Button>\r\n              </div>\r\n            }\r\n            {permissions.includes(\"Delete Subscriptions\") &&\r\n              <div>\r\n                <Button size=\"small\" variant=\"outlined\" color=\"error\" onClick={deleteMember}>Delete</Button>\r\n              </div>\r\n            }\r\n          </CardActions>\r\n          <div>\r\n            {editMember &&\r\n              <div style={{ width: \"300px\", borderWidth: \"3px\", borderStyle: \"solid\", borderColor: \"darkGray\" }}>\r\n                Name : <Input name=\"Name\" defaultValue={member.Name} onChange={e => setUpdatedMember({ ...updatedMember, Name: e.target.value })} /> <br />\r\n                Email : <Input name=\"Email\" defaultValue={member.Email} onChange={e => setUpdatedMember({ ...updatedMember, Email: e.target.value })} /><br />\r\n                City : <Input name=\"City\" defaultValue={member.City} onChange={e => setUpdatedMember({ ...updatedMember, City: e.target.value })} /><br />\r\n                <Button size=\"small\" color=\"success\" variant=\"outlined\" onClick={updateMember}>Save</Button>\r\n                <Button size=\"small\" variant=\"outlined\" color=\"inherit\" onClick={e => setEditMember(!editMember)} >Cencel</Button>\r\n              </div>\r\n            }\r\n          </div>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default MemberComp;"]},"metadata":{},"sourceType":"module"}