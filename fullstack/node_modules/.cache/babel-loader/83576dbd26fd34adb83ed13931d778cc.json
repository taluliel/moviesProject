{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\FullStack\\\\fullStack1\\\\fullstack\\\\src\\\\views\\\\Movie.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport moviesUtils from '../utils/moviesUtils';\nimport subscriptionsUtils from '../utils/subscriptionsUtils';\nimport { useSelector } from \"react-redux\";\nimport { Link } from 'react-router-dom';\nimport memberUtils from '../utils/membersUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovieComp = props => {\n  _s();\n\n  const [movie, setMovie] = useState({});\n  const [members, setMemebers] = useState([]);\n  const [subscriptions, setSubscriptions] = useState([]);\n  const [editMovie, setEditMovie] = useState(false);\n  const [updatedMovie, setUpdatedMovie] = useState({});\n  const permissions = useSelector(state => state.user.Permissions);\n  useEffect(() => {\n    async function fetchData() {\n      let allMembers = await memberUtils.allMembers();\n      setMemebers(allMembers);\n      let id = props.movie ? props.movie._id : props.match.params.id;\n      let subscriptionsData = await subscriptionsUtils.getSubscriptionsByMovie(id);\n      setSubscriptions(subscriptionsData);\n    }\n\n    fetchData();\n  }, []);\n  useEffect(() => {\n    async function fetchData() {\n      if (props.movie) {\n        setMovie(props.movie);\n      } else {\n        let movie = await moviesUtils.getMovie(props.match.params.id);\n        setMovie(movie);\n      }\n\n      ;\n    }\n\n    fetchData();\n  }, [props]);\n\n  const deleteMovie = async () => {\n    let movieDeleted = await moviesUtils.deleteMovie(movie._id);\n    return movieDeleted;\n  };\n\n  const sendData = async e => {\n    e.preventDefault();\n    let MovieData = await moviesUtils.EditMovie(movie._id, updatedMovie);\n    setEditMovie(!editMovie);\n    return MovieData;\n  };\n\n  const getMemberName = id => {\n    let memberData = members.filter(x => x._id === id);\n    return memberData[0].Name;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"400px\",\n      borderWidth: \"5px\",\n      borderStyle: \"solid\",\n      borderColor: \"blue\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\" \", movie.Name, \",   \", movie.Premiered]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 6\n    }, this), \"Genres:  \", movie.Genres, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 31\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 37\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      alt: movie.id,\n      width: \"140px\",\n      height: \"200px\",\n      src: movie.Image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 81\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \" Subscriptions Watched : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this), subscriptions.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: subscriptions.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: \"/member/\" + item.MemberId,\n              children: getMemberName(item.MemberId)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 11\n            }, this), \",\", item.Movies.date, \" \"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), permissions.includes(\"Update Movies\") && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"Edit\",\n        onClick: e => setEditMovie(!editMovie)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this), permissions.includes(\"Delete Movies\") && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"Delete\",\n        onClick: deleteMovie\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 66\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 71\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: editMovie && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"300px\",\n          borderWidth: \"3px\",\n          borderStyle: \"solid\",\n          borderColor: \"black\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => sendData(e),\n          children: [\"Name : \", /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"Name\",\n            value: updatedMovie.Name,\n            onChange: e => setUpdatedMovie({ ...updatedMovie,\n              Name: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 20\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 142\n          }, this), \"Genres : \", /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \" Genres\",\n            value: updatedMovie.Genres,\n            onChange: e => setUpdatedMovie({ ...updatedMovie,\n              Genres: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 152\n          }, this), \"Image URL : \", /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"Image\",\n            value: updatedMovie.Image,\n            onChange: e => setUpdatedMovie({ ...updatedMovie,\n              Image: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 151\n          }, this), \"Premiered : \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            name: \"Premiered\",\n            onChange: e => setUpdatedMovie({ ...updatedMovie,\n              Premiered: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 142\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: e => setEditMovie(!editMovie),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 1\n  }, this);\n};\n\n_s(MovieComp, \"kW2T9or6rnY7cXiPT5pGI6KWA0g=\", false, function () {\n  return [useSelector];\n});\n\n_c = MovieComp;\nexport default MovieComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieComp\");","map":{"version":3,"sources":["C:/Users/User/FullStack/fullStack1/fullstack/src/views/Movie.js"],"names":["useState","useEffect","moviesUtils","subscriptionsUtils","useSelector","Link","memberUtils","MovieComp","props","movie","setMovie","members","setMemebers","subscriptions","setSubscriptions","editMovie","setEditMovie","updatedMovie","setUpdatedMovie","permissions","state","user","Permissions","fetchData","allMembers","id","_id","match","params","subscriptionsData","getSubscriptionsByMovie","getMovie","deleteMovie","movieDeleted","sendData","e","preventDefault","MovieData","EditMovie","getMemberName","memberData","filter","x","Name","width","borderWidth","borderStyle","borderColor","Premiered","Genres","Image","length","map","item","index","MemberId","Movies","date","includes","target","value"],"mappings":"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","sourcesContent":["import {useState, useEffect} from 'react'\r\nimport moviesUtils from '../utils/moviesUtils'\r\nimport subscriptionsUtils from '../utils/subscriptionsUtils'\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from 'react-router-dom';\r\nimport memberUtils from '../utils/membersUtils'\r\n\r\nconst MovieComp = (props) =>\r\n{\r\nconst [movie, setMovie] = useState({})\r\nconst [members, setMemebers] = useState([])\r\nconst [subscriptions, setSubscriptions] =  useState([])\r\nconst [editMovie, setEditMovie] = useState(false)\r\nconst [updatedMovie, setUpdatedMovie] = useState({})\r\nconst permissions= useSelector((state) => state.user.Permissions)\r\n\r\nuseEffect(() => {\r\n  async function fetchData() {\r\n    let allMembers =await memberUtils.allMembers();\r\n    setMemebers(allMembers);\r\n    let id=props.movie? props.movie._id : props.match.params.id\r\n   let subscriptionsData= await subscriptionsUtils.getSubscriptionsByMovie(id);\r\n   setSubscriptions(subscriptionsData)}\r\n    fetchData();\r\n  },[])\r\n\r\nuseEffect(() => {\r\n  async function fetchData() {\r\n    if(props.movie){\r\n      setMovie(props.movie)\r\n    }\r\n  else{\r\n    let movie = await moviesUtils.getMovie(props.match.params.id);\r\n    setMovie(movie)\r\n  }\r\n  ;}\r\n    fetchData();\r\n  },[props])\r\n\r\nconst deleteMovie= async ()=>{\r\n    let movieDeleted= await moviesUtils.deleteMovie(movie._id);\r\n     return movieDeleted\r\n}\r\n\r\nconst sendData = async (e) =>\r\n{\r\n  e.preventDefault();\r\n  let MovieData= await moviesUtils.EditMovie(movie._id, updatedMovie);\r\n  setEditMovie(!editMovie)\r\n  return MovieData\r\n}\r\n\r\nconst getMemberName=(id)=>{\r\n  let memberData= members.filter(x=>x._id===id);\r\n  return memberData[0].Name;\r\n}\r\n\r\n\r\nreturn(\r\n<div style={{width:\"400px\", borderWidth : \"5px\", borderStyle : \"solid\", borderColor : \"blue\"}}>\r\n        \r\n     <h3> {movie.Name},   {movie.Premiered}</h3>\r\n      Genres:  {movie.Genres} <br/> <br/>\r\n      <img  alt={movie.id} width = \"140px\" height = \"200px\" src={movie.Image} /><br/>\r\n\r\n      <div>\r\n      <h4> Subscriptions Watched : </h4>\r\n      {subscriptions.length >0 &&\r\n     <ul>\r\n       {subscriptions.map((item, index)=>{\r\n         return <li key={index}>\r\n          <Link to={\"/member/\" + item.MemberId} >{getMemberName( item.MemberId)}</Link>,\r\n           {item.Movies.date} </li>\r\n       })}\r\n     </ul>\r\n}\r\n      </div>\r\n      {permissions.includes(\"Update Movies\") &&\r\n    <div>\r\n      <input type=\"button\" value=\"Edit\" onClick={e => setEditMovie(!editMovie)}/>\r\n    </div>\r\n    }\r\n    {permissions.includes(\"Delete Movies\") &&\r\n    <div>\r\n      <input type=\"button\" value=\"Delete\" onClick={deleteMovie}/><br/><br/>\r\n    </div>\r\n    }\r\n      <div>\r\n      {editMovie&&\r\n            <div style={{width:\"300px\", borderWidth : \"3px\", borderStyle : \"solid\", borderColor : \"black\"}}>\r\n           <form onSubmit={e => sendData(e)}>\r\n            Name : <input name=\"Name\" value={updatedMovie.Name} onChange={e => setUpdatedMovie({...updatedMovie, Name : e.target.value})} /> <br/>\r\n            Genres : <input name=\" Genres\" value={updatedMovie.Genres}  onChange={e => setUpdatedMovie({...updatedMovie,  Genres : e.target.value})} /><br/>\r\n            Image URL : <input name=\"Image\" value={updatedMovie.Image}   onChange={e => setUpdatedMovie({...updatedMovie, Image : e.target.value})} /><br/>\r\n            Premiered : <input type=\"date\" name=\"Premiered\" onChange={e => setUpdatedMovie({...updatedMovie, Premiered : e.target.value})} /><br/>\r\n\r\n            <input type=\"submit\" value=\"Save\"/>\r\n            <button type=\"button\" onClick={e => setEditMovie(!editMovie)}>Cancel</button>\r\n            </form> \r\n      </div>\r\n      }\r\n    </div>\r\n</div>)\r\n}\r\n\r\n\r\n\r\nexport default MovieComp;"]},"metadata":{},"sourceType":"module"}