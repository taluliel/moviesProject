{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\FullStack\\\\fullStack1\\\\fullstack\\\\src\\\\views\\\\AllMovies.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport moviesUtils from '../utils/moviesUtils';\nimport MovieComp from './Movie';\nimport { useSelector } from \"react-redux\";\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AllMoviesComp() {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [addMovie, setAddMovie] = useState(false);\n  const [movie, setMovie] = useState({});\n  const permissions = useSelector(state => state.user.Permissions);\n  useEffect(() => {\n    async function fetchData() {\n      let allMovies = await moviesUtils.allMovies();\n      setMovies(allMovies);\n    }\n\n    fetchData();\n  }, []);\n\n  const addNewMovie = async () => {\n    await moviesUtils.addMovie(movie);\n    setAddMovie(!addMovie);\n  };\n\n  const searchMovie = async movieName => {\n    console.log(movieName);\n\n    if (!movieName) {\n      let allMovies = await moviesUtils.allMovies();\n      setMovies(allMovies);\n    } else {\n      let allMovies = await moviesUtils.allMovies();\n      let searchedMovies = allMovies.filter(x => x.Name.includes(movieName));\n      setMovies(searchedMovies);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this), \"Search\", movies && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n        disablePortal: true,\n        id: \"combo-box-demo\",\n        options: movies.map(option => option.Name),\n        sx: {\n          width: 300\n        },\n        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n          label: \"Movie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 32\n        }, this),\n        onChange: (event, value) => searchMovie(value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setSearch(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: e => searchMovie(),\n        children: \"Find Movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 75\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 80\n      }, this), permissions.includes(\"Create Movies\") && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: e => setAddMovie(!addMovie),\n          children: \"Add Movie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 83\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 88\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: addMovie && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"300px\",\n            borderWidth: \"3px\",\n            borderStyle: \"solid\",\n            borderColor: \"black\"\n          },\n          children: [\"Name : \", /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"Name\",\n            required: true,\n            onChange: e => setMovie({ ...movie,\n              Name: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 20\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 111\n          }, this), \"Genres : \", /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"Genres\",\n            required: true,\n            onChange: e => setMovie({ ...movie,\n              Genres: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 116\n          }, this), \"Image URL : \", /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"Image\",\n            required: true,\n            onChange: e => setMovie({ ...movie,\n              Image: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 117\n          }, this), \"Premiered : \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"Date\",\n            required: true,\n            name: \"Premiered\",\n            onChange: e => setMovie({ ...movie,\n              Premiered: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 137\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Save\",\n            onClick: addNewMovie\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: e => setAddMovie(!addMovie),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 88\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 93\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 14\n      }, this), movies.map(item => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(MovieComp, {\n            movie: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 38\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 65\n          }, this)]\n        }, item._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 18\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AllMoviesComp, \"zygSs7m3pzqNYx3lwlsB+1rJ4d0=\", false, function () {\n  return [useSelector];\n});\n\n_c = AllMoviesComp;\nexport default AllMoviesComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllMoviesComp\");","map":{"version":3,"sources":["C:/Users/User/FullStack/fullStack1/fullstack/src/views/AllMovies.js"],"names":["useState","useEffect","moviesUtils","MovieComp","useSelector","TextField","Autocomplete","AllMoviesComp","movies","setMovies","addMovie","setAddMovie","movie","setMovie","permissions","state","user","Permissions","fetchData","allMovies","addNewMovie","searchMovie","movieName","console","log","searchedMovies","filter","x","Name","includes","map","option","width","params","event","value","e","setSearch","target","borderWidth","borderStyle","borderColor","Genres","Image","Premiered","item","_id"],"mappings":"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","sourcesContent":["import {useState, useEffect} from 'react'\r\nimport moviesUtils from '../utils/moviesUtils'\r\nimport MovieComp from './Movie'\r\nimport { useSelector } from \"react-redux\";\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\n\r\nfunction AllMoviesComp() {\r\n\r\n    const [movies, setMovies] = useState([])\r\n    const [addMovie, setAddMovie] = useState(false)\r\n    const [movie, setMovie] = useState({})\r\n    const permissions= useSelector((state) => state.user.Permissions)\r\n\r\n    useEffect(() => {\r\n      async function fetchData() {\r\n        let allMovies =await moviesUtils.allMovies();\r\n        setMovies(allMovies)\r\n        }\r\n      fetchData();\r\n    },[])\r\n\r\n    const addNewMovie= async()=>{\r\n      await moviesUtils.addMovie(movie);\r\n      setAddMovie(!addMovie)\r\n    }\r\n\r\n    const searchMovie= async(movieName)=>{\r\n      console.log(movieName)\r\n      \r\n      if(!movieName){\r\n        let allMovies =await moviesUtils.allMovies();\r\n        setMovies(allMovies)\r\n      }\r\n      else{\r\n        let allMovies =await moviesUtils.allMovies();\r\n       let searchedMovies= allMovies.filter(x=> x.Name.includes(movieName))\r\n        setMovies(searchedMovies)\r\n      }\r\n      \r\n    }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n\r\n    <h1>Movies</h1>\r\n    <br/>\r\n    Search\r\n    {movies&&\r\n<div>\r\n    <Autocomplete\r\n      disablePortal\r\n      id=\"combo-box-demo\"\r\n      options={movies.map((option) => option.Name)}\r\n      sx={{ width: 300 }}\r\n      renderInput={(params) => <TextField {...params} label=\"Movie\" />}\r\n      onChange={(event, value) => searchMovie(value)}\r\n   \r\n    />\r\n    \r\n    \r\n     <input type=\"text\" onChange={e => setSearch(e.target.value)}/>\r\n    <button type=\"button\" onClick={e => searchMovie()}>Find Movie</button><br/><br/>\r\n\r\n\r\n    {permissions.includes(\"Create Movies\") &&\r\n    <div>\r\n    <button type=\"button\" onClick={e => setAddMovie(!addMovie)}>Add Movie</button><br/><br/>\r\n    </div>\r\n    }\r\n \r\n    <div>\r\n      {addMovie&&\r\n            <div style={{width:\"300px\", borderWidth : \"3px\", borderStyle : \"solid\", borderColor : \"black\"}}>\r\n        \r\n            Name : <input name=\"Name\" required onChange={e => setMovie({...movie, Name : e.target.value})} /> <br/>\r\n            Genres : <input name=\"Genres\" required onChange={e => setMovie({...movie, Genres : e.target.value})} /><br/>\r\n            Image URL : <input name=\"Image\" required onChange={e => setMovie({...movie, Image : e.target.value})} /><br/>\r\n            Premiered : <input type=\"Date\" required name=\"Premiered\" onChange={e => setMovie({...movie, Premiered : e.target.value})} /><br/>\r\n      \r\n            <input type=\"submit\" value=\"Save\" onClick={addNewMovie}/>\r\n            <button type=\"button\" onClick={e => setAddMovie(!addMovie)}>Cancel</button><br/><br/>\r\n      </div>\r\n      }\r\n  </div><br/><br/>\r\n    {\r\n      movies.map(item =>\r\n        {\r\n          return <div key={item._id}><MovieComp  movie={item} /><br/></div> \r\n        })\r\n    }\r\n </div>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AllMoviesComp;\r\n"]},"metadata":{},"sourceType":"module"}