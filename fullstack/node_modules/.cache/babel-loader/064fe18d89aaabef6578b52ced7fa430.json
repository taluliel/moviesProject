{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\FullStack\\\\fullStack1\\\\fullstack\\\\src\\\\views\\\\Movie.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport moviesUtils from '../utils/moviesUtils';\nimport subscriptionsUtils from '../utils/subscriptionsUtils';\nimport { useSelector } from \"react-redux\";\nimport { Link } from 'react-router-dom';\nimport memberUtils from '../utils/membersUtils';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport DatePicker from '@mui/lab/DatePicker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovieComp = props => {\n  _s();\n\n  const [movie, setMovie] = useState({});\n  const [members, setMemebers] = useState([]);\n  const [subscriptions, setSubscriptions] = useState([]);\n  const [editMovie, setEditMovie] = useState(false);\n  const [updatedMovie, setUpdatedMovie] = useState({});\n  const permissions = useSelector(state => state.user.Permissions);\n  useEffect(() => {\n    async function fetchData() {\n      let allMembers = await memberUtils.allMembers();\n      setMemebers(allMembers);\n      let id = props.movie ? props.movie._id : props.match.params.id;\n      let subscriptionsData = await subscriptionsUtils.getSubscriptionsByMovie(id);\n      setSubscriptions(subscriptionsData);\n    }\n\n    fetchData();\n  }, []);\n  useEffect(() => {\n    async function fetchData() {\n      if (props.movie) {\n        setMovie(props.movie);\n      } else {\n        let movie = await moviesUtils.getMovie(props.match.params.id);\n        setMovie(movie);\n      }\n\n      ;\n    }\n\n    fetchData();\n  }, [props]);\n\n  const deleteMovie = async () => {\n    let movieDeleted = await moviesUtils.deleteMovie(movie._id);\n    return movieDeleted;\n  };\n\n  const sendData = async e => {\n    e.preventDefault();\n    let MovieData = await moviesUtils.EditMovie(movie._id, updatedMovie);\n    setEditMovie(!editMovie);\n    return MovieData;\n  };\n\n  const getMemberName = id => {\n    let memberData = members.filter(x => x._id === id);\n    return memberData[0].Name;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"400px\",\n          borderWidth: \"3px\",\n          borderStyle: \"solid\",\n          borderColor: \"gray\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h5\",\n          component: \"div\",\n          children: [movie.Name, \",   \", movie.Premiered]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), \"Genres:  \", movie.Genres, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 35\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 42\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: movie.id,\n          width: \"140px\",\n          height: \"200px\",\n          src: movie.Image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 80\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \" Subscriptions Watched : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), subscriptions.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: subscriptions.map((item, index) => {\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/member/\" + item.MemberId,\n                  children: getMemberName(item.MemberId)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 21\n                }, this), \",\", item.Movies.date, \" \"]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 26\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          children: [permissions.includes(\"Update Movies\") && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              size: \"small\",\n              variant: \"outlined\",\n              onClick: e => setEditMovie(!editMovie),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this), permissions.includes(\"Delete Movies\") && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              size: \"small\",\n              variant: \"outlined\",\n              color: \"error\",\n              onClick: deleteMovie,\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: editMovie && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: \"300px\",\n              borderWidth: \"3px\",\n              borderStyle: \"solid\",\n              borderColor: \"darkGray\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: e => sendData(e),\n              children: [\"Name : \", /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"Name\",\n                value: updatedMovie.Name,\n                onChange: e => setUpdatedMovie({ ...updatedMovie,\n                  Name: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 26\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 149\n              }, this), \"Genres : \", /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \" Genres\",\n                value: updatedMovie.Genres,\n                onChange: e => setUpdatedMovie({ ...updatedMovie,\n                  Genres: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 28\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 157\n              }, this), \"Image URL : \", /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"Image\",\n                value: updatedMovie.Image,\n                onChange: e => setUpdatedMovie({ ...updatedMovie,\n                  Image: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 31\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 156\n              }, this), /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n                dateAdapter: AdapterDateFns,\n                children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                  label: \"date\",\n                  value: value,\n                  onChange: newValue => setUpdatedMovie({ ...updatedMovie,\n                    Premiered: newValue\n                  }),\n                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 48\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"submit\",\n                value: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                size: \"small\",\n                onClick: e => setEditMovie(!editMovie),\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MovieComp, \"kW2T9or6rnY7cXiPT5pGI6KWA0g=\", false, function () {\n  return [useSelector];\n});\n\n_c = MovieComp;\nexport default MovieComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieComp\");","map":{"version":3,"sources":["C:/Users/User/FullStack/fullStack1/fullstack/src/views/Movie.js"],"names":["useState","useEffect","moviesUtils","subscriptionsUtils","useSelector","Link","memberUtils","Card","CardActions","CardContent","CardMedia","Button","Typography","AdapterDateFns","LocalizationProvider","DatePicker","MovieComp","props","movie","setMovie","members","setMemebers","subscriptions","setSubscriptions","editMovie","setEditMovie","updatedMovie","setUpdatedMovie","permissions","state","user","Permissions","fetchData","allMembers","id","_id","match","params","subscriptionsData","getSubscriptionsByMovie","getMovie","deleteMovie","movieDeleted","sendData","e","preventDefault","MovieData","EditMovie","getMemberName","memberData","filter","x","Name","width","borderWidth","borderStyle","borderColor","Premiered","Genres","Image","length","map","item","index","MemberId","Movies","date","includes","target","value","newValue"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport moviesUtils from '../utils/moviesUtils'\r\nimport subscriptionsUtils from '../utils/subscriptionsUtils'\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from 'react-router-dom';\r\nimport memberUtils from '../utils/membersUtils'\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\n\r\nconst MovieComp = (props) => {\r\n  const [movie, setMovie] = useState({})\r\n  const [members, setMemebers] = useState([])\r\n  const [subscriptions, setSubscriptions] = useState([])\r\n  const [editMovie, setEditMovie] = useState(false)\r\n  const [updatedMovie, setUpdatedMovie] = useState({})\r\n  const permissions = useSelector((state) => state.user.Permissions)\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let allMembers = await memberUtils.allMembers();\r\n      setMemebers(allMembers);\r\n      let id = props.movie ? props.movie._id : props.match.params.id\r\n      let subscriptionsData = await subscriptionsUtils.getSubscriptionsByMovie(id);\r\n      setSubscriptions(subscriptionsData)\r\n    }\r\n    fetchData();\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      if (props.movie) {\r\n        setMovie(props.movie)\r\n      }\r\n      else {\r\n        let movie = await moviesUtils.getMovie(props.match.params.id);\r\n        setMovie(movie)\r\n      }\r\n      ;\r\n    }\r\n    fetchData();\r\n  }, [props])\r\n\r\n  const deleteMovie = async () => {\r\n    let movieDeleted = await moviesUtils.deleteMovie(movie._id);\r\n    return movieDeleted\r\n  }\r\n\r\n  const sendData = async (e) => {\r\n    e.preventDefault();\r\n    let MovieData = await moviesUtils.EditMovie(movie._id, updatedMovie);\r\n    setEditMovie(!editMovie)\r\n    return MovieData\r\n  }\r\n\r\n  const getMemberName = (id) => {\r\n    let memberData = members.filter(x => x._id === id);\r\n    return memberData[0].Name;\r\n  }\r\n\r\n\r\n  return (\r\n    <Card >\r\n\r\n      <CardContent>\r\n        <div style={{ width: \"400px\", borderWidth: \"3px\", borderStyle: \"solid\", borderColor: \"gray\" }}>\r\n          <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n            {movie.Name},   {movie.Premiered}\r\n          </Typography>\r\n\r\n          Genres:  {movie.Genres} <br /> <br />\r\n          <img alt={movie.id} width=\"140px\" height=\"200px\" src={movie.Image} /><br />\r\n\r\n          <div>\r\n            <h4> Subscriptions Watched : </h4>\r\n            {subscriptions.length > 0 &&\r\n              <ul>\r\n                {subscriptions.map((item, index) => {\r\n                  return <li key={index}>\r\n                    <Link to={\"/member/\" + item.MemberId} >{getMemberName(item.MemberId)}</Link>,\r\n                    {item.Movies.date} </li>\r\n                })}\r\n              </ul>\r\n            }\r\n          </div>\r\n          <CardActions>\r\n            {permissions.includes(\"Update Movies\") &&\r\n              <div>\r\n                <Button size=\"small\" variant=\"outlined\" onClick={e => setEditMovie(!editMovie)}>Edit</Button>\r\n              </div>\r\n            }\r\n            {permissions.includes(\"Delete Movies\") &&\r\n              <div>\r\n                <Button size=\"small\" variant=\"outlined\" color=\"error\" onClick={deleteMovie}>Delete</Button>\r\n              </div>\r\n            }\r\n          </CardActions>\r\n          <div>\r\n            {editMovie &&\r\n              <div style={{ width: \"300px\", borderWidth: \"3px\", borderStyle: \"solid\", borderColor: \"darkGray\" }}>\r\n                <form onSubmit={e => sendData(e)}>\r\n                  Name : <input name=\"Name\" value={updatedMovie.Name} onChange={e => setUpdatedMovie({ ...updatedMovie, Name: e.target.value })} /> <br />\r\n                  Genres : <input name=\" Genres\" value={updatedMovie.Genres} onChange={e => setUpdatedMovie({ ...updatedMovie, Genres: e.target.value })} /><br />\r\n                  Image URL : <input name=\"Image\" value={updatedMovie.Image} onChange={e => setUpdatedMovie({ ...updatedMovie, Image: e.target.value })} /><br />\r\n\r\n                  <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                    <DatePicker\r\n                      label=\"date\"\r\n                      value={value}\r\n                      onChange={newValue => setUpdatedMovie({ ...updatedMovie, Premiered: newValue })}\r\n                      renderInput={(params) => <TextField {...params} />}\r\n                    />\r\n                  </LocalizationProvider>\r\n\r\n                  <input type=\"submit\" value=\"Save\" />\r\n\r\n                  <Button variant=\"outlined\" size=\"small\" onClick={e => setEditMovie(!editMovie)}>Cancel</Button>\r\n\r\n                </form>\r\n              </div>\r\n            }\r\n          </div>\r\n        </div>\r\n      </CardContent>\r\n    </Card>)\r\n}\r\n\r\n\r\n\r\nexport default MovieComp;"]},"metadata":{},"sourceType":"module"}