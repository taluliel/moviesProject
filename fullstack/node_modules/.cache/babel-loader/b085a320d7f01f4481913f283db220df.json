{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\FullStack\\\\fullStack1\\\\fullstack\\\\src\\\\views\\\\Movie.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport moviesUtils from \"../utils/moviesUtils\";\nimport subscriptionsUtils from \"../utils/subscriptionsUtils\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate, Link, useLocation } from \"react-router-dom\";\nimport memberUtils from \"../utils/membersUtils\";\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport Input from \"@mui/material/Input\";\nimport Container from \"@mui/material/Container\";\nimport PersonOutlineTwoToneIcon from \"@mui/icons-material/PersonOutlineTwoTone\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovieComp = props => {\n  _s();\n\n  const [movie, setMovie] = useState({});\n  const [members, setMemebers] = useState([]);\n  const [subscriptions, setSubscriptions] = useState([]);\n  const [editMovie, setEditMovie] = useState(false);\n  const [updatedMovie, setUpdatedMovie] = useState({});\n  const permissions = useSelector(state => state.user.Permissions);\n  const navigate = useNavigate();\n  const {\n    state\n  } = useLocation();\n  useEffect(() => {\n    async function fetchData() {\n      let allMembers = await memberUtils.allMembers();\n      setMemebers(allMembers);\n      console.log(state); // let id = props.movie ? props.movie._id : props.match.params.id;\n      // let subscriptionsData = await subscriptionsUtils.getSubscriptionsByMovie(\n      //   id\n      // );\n      // setSubscriptions(subscriptionsData);\n    }\n\n    fetchData();\n  }, []); // useEffect(() => {\n  //   async function fetchData() {\n  //     if (props.movie) {\n  //       setMovie(props.movie);\n  //     } else {\n  //       let movie = await moviesUtils.getMovie(props.match.params.id);\n  //       setMovie(movie);\n  //     }\n  //   }\n  //   fetchData();\n  // }, [props]);\n\n  const deleteMovie = async () => {\n    let movieDeleted = await moviesUtils.deleteMovie(movie._id);\n    props.updateMovies(movieDeleted);\n    navigate(\"/movies\");\n  };\n\n  const sendData = async () => {\n    let Movies = await moviesUtils.EditMovie(movie._id, updatedMovie);\n    setEditMovie(!editMovie);\n    props.updateMovies(Movies);\n    navigate(\"/movies\");\n  };\n\n  const getMemberName = id => {\n    let memberData = members.filter(x => x._id === id);\n    return memberData[0].Name;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"400px\",\n          borderWidth: \"3px\",\n          borderStyle: \"solid\",\n          borderColor: \"gray\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h6\",\n          component: \"div\",\n          children: [movie.Name, \", \", movie.Premiered]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), movie.Genres && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Genres: \", movie.Genres.toString(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            alt: movie.id,\n            width: \"140px\",\n            height: \"200px\",\n            src: movie.Image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: subscriptions.length > 0 && /*#__PURE__*/_jsxDEV(Container, {\n            component: \"span\",\n            sx: {\n              border: \"1px dashed grey\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \" Subscriptions Watched : \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this), subscriptions.map((item, index) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(PersonOutlineTwoToneIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => {\n                    navigate(\"/member/\" + item.MemberId, {\n                      state: item.Movies.movieId\n                    });\n                  },\n                  children: getMemberName(item.MemberId)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 23\n                }, this), \",\", item.Movies.date, \" \"]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 21\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          children: [permissions.includes(\"Update Movies\") && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              size: \"small\",\n              variant: \"outlined\",\n              onClick: e => setEditMovie(!editMovie),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this), permissions.includes(\"Delete Movies\") && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              size: \"small\",\n              variant: \"outlined\",\n              color: \"error\",\n              onClick: deleteMovie,\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: editMovie && /*#__PURE__*/_jsxDEV(Container, {\n            component: \"span\",\n            sx: {\n              p: 2,\n              border: \"1px dashed grey\"\n            },\n            children: [\"Name :\", \" \", /*#__PURE__*/_jsxDEV(Input, {\n              size: \"small\",\n              name: \"Name\",\n              defaultValue: movie.Name,\n              onChange: e => setUpdatedMovie({ ...updatedMovie,\n                Name: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this), \"Genres :\", \" \", /*#__PURE__*/_jsxDEV(Input, {\n              size: \"small\",\n              name: \" Genres\",\n              defaultValue: movie.Genres,\n              onChange: e => setUpdatedMovie({ ...updatedMovie,\n                Genres: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this), \"Image URL :\", \" \", /*#__PURE__*/_jsxDEV(Input, {\n              size: \"small\",\n              name: \"Image\",\n              defaultValue: movie.Image,\n              onChange: e => setUpdatedMovie({ ...updatedMovie,\n                Image: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 17\n            }, this), \"Premiered :\", \" \", /*#__PURE__*/_jsxDEV(Input, {\n              size: \"small\",\n              type: \"date\",\n              name: \"Premiered\",\n              disabled: true,\n              value: movie.Premiered,\n              onChange: e => setUpdatedMovie({ ...updatedMovie,\n                Premiered: movie.Premiered\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              size: \"small\",\n              color: \"success\",\n              variant: \"outlined\",\n              onClick: sendData,\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              color: \"inherit\",\n              size: \"small\",\n              onClick: e => setEditMovie(!editMovie),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MovieComp, \"E7gumzJurvvP/aNESVMRuId6hss=\", false, function () {\n  return [useSelector, useNavigate, useLocation];\n});\n\n_c = MovieComp;\nexport default MovieComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieComp\");","map":{"version":3,"sources":["C:/Users/User/FullStack/fullStack1/fullstack/src/views/Movie.js"],"names":["useState","useEffect","moviesUtils","subscriptionsUtils","useSelector","useNavigate","Link","useLocation","memberUtils","Card","CardActions","CardContent","Button","Typography","Input","Container","PersonOutlineTwoToneIcon","MovieComp","props","movie","setMovie","members","setMemebers","subscriptions","setSubscriptions","editMovie","setEditMovie","updatedMovie","setUpdatedMovie","permissions","state","user","Permissions","navigate","fetchData","allMembers","console","log","deleteMovie","movieDeleted","_id","updateMovies","sendData","Movies","EditMovie","getMemberName","id","memberData","filter","x","Name","width","borderWidth","borderStyle","borderColor","Premiered","Genres","toString","Image","length","border","map","item","index","MemberId","movieId","date","includes","e","p","target","value"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport moviesUtils from \"../utils/moviesUtils\";\r\nimport subscriptionsUtils from \"../utils/subscriptionsUtils\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate, Link, useLocation } from \"react-router-dom\";\r\nimport memberUtils from \"../utils/membersUtils\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Input from \"@mui/material/Input\";\r\nimport Container from \"@mui/material/Container\";\r\nimport PersonOutlineTwoToneIcon from \"@mui/icons-material/PersonOutlineTwoTone\";\r\n\r\nconst MovieComp = (props) => {\r\n  const [movie, setMovie] = useState({});\r\n  const [members, setMemebers] = useState([]);\r\n  const [subscriptions, setSubscriptions] = useState([]);\r\n  const [editMovie, setEditMovie] = useState(false);\r\n  const [updatedMovie, setUpdatedMovie] = useState({});\r\n  const permissions = useSelector((state) => state.user.Permissions);\r\n  const navigate = useNavigate();\r\n  const { state } = useLocation();\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let allMembers = await memberUtils.allMembers();\r\n      setMemebers(allMembers);\r\n      console.log(state);\r\n      // let id = props.movie ? props.movie._id : props.match.params.id;\r\n      // let subscriptionsData = await subscriptionsUtils.getSubscriptionsByMovie(\r\n      //   id\r\n      // );\r\n      // setSubscriptions(subscriptionsData);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   async function fetchData() {\r\n  //     if (props.movie) {\r\n  //       setMovie(props.movie);\r\n  //     } else {\r\n  //       let movie = await moviesUtils.getMovie(props.match.params.id);\r\n  //       setMovie(movie);\r\n  //     }\r\n  //   }\r\n  //   fetchData();\r\n  // }, [props]);\r\n\r\n  const deleteMovie = async () => {\r\n    let movieDeleted = await moviesUtils.deleteMovie(movie._id);\r\n    props.updateMovies(movieDeleted);\r\n    navigate(\"/movies\");\r\n  };\r\n\r\n  const sendData = async () => {\r\n    let Movies = await moviesUtils.EditMovie(movie._id, updatedMovie);\r\n    setEditMovie(!editMovie);\r\n    props.updateMovies(Movies);\r\n    navigate(\"/movies\");\r\n  };\r\n\r\n  const getMemberName = (id) => {\r\n    let memberData = members.filter((x) => x._id === id);\r\n    return memberData[0].Name;\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <div\r\n          style={{\r\n            width: \"400px\",\r\n            borderWidth: \"3px\",\r\n            borderStyle: \"solid\",\r\n            borderColor: \"gray\",\r\n          }}\r\n        >\r\n          <Typography gutterBottom variant=\"h6\" component=\"div\">\r\n            {movie.Name}, {movie.Premiered}\r\n          </Typography>\r\n\r\n          {movie.Genres && (\r\n            <div>\r\n              Genres: {movie.Genres.toString()}\r\n              <br /> <br />\r\n              <img\r\n                alt={movie.id}\r\n                width=\"140px\"\r\n                height=\"200px\"\r\n                src={movie.Image}\r\n              />\r\n              <br />\r\n            </div>\r\n          )}\r\n\r\n          <div>\r\n            {subscriptions.length > 0 && (\r\n              <Container component=\"span\" sx={{ border: \"1px dashed grey\" }}>\r\n                <h4> Subscriptions Watched : </h4>\r\n                {subscriptions.map((item, index) => {\r\n                  return (\r\n                    <div key={index}>\r\n                      <PersonOutlineTwoToneIcon />\r\n                      <Button\r\n                        onClick={() => {\r\n                          navigate(\"/member/\" + item.MemberId, {\r\n                            state: item.Movies.movieId,\r\n                          });\r\n                        }}\r\n                      >\r\n                        {getMemberName(item.MemberId)}\r\n                      </Button>\r\n                      ,{item.Movies.date}{\" \"}\r\n                    </div>\r\n                  );\r\n                })}\r\n              </Container>\r\n            )}\r\n          </div>\r\n\r\n          <CardActions>\r\n            {permissions.includes(\"Update Movies\") && (\r\n              <div>\r\n                <Button\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                  onClick={(e) => setEditMovie(!editMovie)}\r\n                >\r\n                  Edit\r\n                </Button>\r\n              </div>\r\n            )}\r\n            {permissions.includes(\"Delete Movies\") && (\r\n              <div>\r\n                <Button\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                  color=\"error\"\r\n                  onClick={deleteMovie}\r\n                >\r\n                  Delete\r\n                </Button>\r\n              </div>\r\n            )}\r\n          </CardActions>\r\n          <div>\r\n            {editMovie && (\r\n              <Container\r\n                component=\"span\"\r\n                sx={{ p: 2, border: \"1px dashed grey\" }}\r\n              >\r\n                Name :{\" \"}\r\n                <Input\r\n                  size=\"small\"\r\n                  name=\"Name\"\r\n                  defaultValue={movie.Name}\r\n                  onChange={(e) =>\r\n                    setUpdatedMovie({ ...updatedMovie, Name: e.target.value })\r\n                  }\r\n                />{\" \"}\r\n                <br />\r\n                Genres :{\" \"}\r\n                <Input\r\n                  size=\"small\"\r\n                  name=\" Genres\"\r\n                  defaultValue={movie.Genres}\r\n                  onChange={(e) =>\r\n                    setUpdatedMovie({ ...updatedMovie, Genres: e.target.value })\r\n                  }\r\n                />\r\n                <br />\r\n                Image URL :{\" \"}\r\n                <Input\r\n                  size=\"small\"\r\n                  name=\"Image\"\r\n                  defaultValue={movie.Image}\r\n                  onChange={(e) =>\r\n                    setUpdatedMovie({ ...updatedMovie, Image: e.target.value })\r\n                  }\r\n                />\r\n                <br />\r\n                Premiered :{\" \"}\r\n                <Input\r\n                  size=\"small\"\r\n                  type=\"date\"\r\n                  name=\"Premiered\"\r\n                  disabled\r\n                  value={movie.Premiered}\r\n                  onChange={(e) =>\r\n                    setUpdatedMovie({\r\n                      ...updatedMovie,\r\n                      Premiered: movie.Premiered,\r\n                    })\r\n                  }\r\n                />\r\n                <br />\r\n                <br />\r\n                <Button\r\n                  size=\"small\"\r\n                  color=\"success\"\r\n                  variant=\"outlined\"\r\n                  onClick={sendData}\r\n                >\r\n                  Save\r\n                </Button>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  color=\"inherit\"\r\n                  size=\"small\"\r\n                  onClick={(e) => setEditMovie(!editMovie)}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </Container>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default MovieComp;\r\n"]},"metadata":{},"sourceType":"module"}