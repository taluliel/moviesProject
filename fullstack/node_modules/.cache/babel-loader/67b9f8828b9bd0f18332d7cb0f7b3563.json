{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\FullStack\\\\fullStack1\\\\fullstack\\\\src\\\\views\\\\UsersManagement.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport usersUtils from \"../utils/UsersUtils\";\nimport UserComp from \"./User\";\nimport Button from \"@mui/material/Button\";\nimport Grid from \"@mui/material/Grid\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Input from \"@mui/material/Input\";\nimport { FormControl, InputLabel, MenuItem, OutlinedInput, Select } from \"@material-ui/core\";\nimport { useTheme } from \"@emotion/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\n\nfunction getStyles(permission, personName, theme) {\n  return {\n    fontWeight: personName.indexOf(permission) === -1 ? theme.typography.fontWeightRegular : theme.typography.fontWeightMedium\n  };\n}\n\nfunction AllUsersComp() {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const [addUser, setAddUser] = useState(false);\n  const [user, setUser] = useState({});\n  const [date, setdate] = useState(\"\");\n  const [SubscriptionsPer, setSubscriptionsPer] = useState({\n    CreateSubscriptions: false,\n    DeleteSubscriptions: false,\n    UpdateSubscriptions: false\n  });\n  const [SubscriptionsPerisChecked, setSubscriptionsPerisChecked] = useState(false);\n  const [MoviesPer, setMoviesPer] = useState({\n    CreateMovies: false,\n    DeleteMovies: false,\n    UpdateMovies: false\n  });\n  const [MoviesPerisChecked, setMoviesPerisChecked] = useState(false);\n  const [permissions, setPermissions] = useState([]);\n  const theme = useTheme();\n  const [personName, setPersonName] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      let allUsers = await usersUtils.allUsers();\n      let today = new Date();\n      let currentDate = today.getFullYear() + \"-\" + (today.getMonth() + 1) + \"-\" + today.getDate();\n      setdate(currentDate);\n      setUsers(allUsers);\n    }\n\n    fetchData();\n  }, []);\n  useEffect(() => {\n    async function fetchData() {\n      if (SubscriptionsPer.CreateSubscriptions || SubscriptionsPer.DeleteSubscriptions || SubscriptionsPer.UpdateSubscriptions) {\n        setSubscriptionsPerisChecked(true);\n      }\n\n      if (!SubscriptionsPer.CreateSubscriptions && !SubscriptionsPer.DeleteSubscriptions && !SubscriptionsPer.UpdateSubscriptions) {\n        setSubscriptionsPerisChecked(false);\n      }\n    }\n\n    fetchData();\n  }, [SubscriptionsPer]);\n  useEffect(() => {\n    async function fetchData() {\n      if (MoviesPer.CreateMovies || MoviesPer.DeleteMovies || MoviesPer.UpdateMovies) {\n        setMoviesPerisChecked(true);\n      }\n\n      if (!MoviesPer.CreateMovies && !MoviesPer.DeleteMovies && !MoviesPer.UpdateMovies) {\n        setMoviesPerisChecked(false);\n      }\n    }\n\n    fetchData();\n  }, [MoviesPer]); //Create permissions array\n\n  const addPermissions = e => {\n    let per = permissions;\n    console.log(e.target.value);\n\n    if (e.target.checked) {\n      per.push(e.target.value);\n    }\n\n    if (!e.target.checked) {\n      let index = per.indexOf(e.target.value);\n      per.splice(index, 1);\n    }\n\n    if (SubscriptionsPerisChecked) {\n      per.push(\"View Subscriptions\");\n    } else if (!SubscriptionsPerisChecked) {\n      let index = per.indexOf(\"View Subscriptions\");\n      per.splice(index, 1);\n    }\n\n    if (MoviesPerisChecked) {\n      per.push(\"View Movies\");\n    } else if (!MoviesPerisChecked) {\n      let index = per.indexOf(\"View Movies\");\n      per.splice(index, 1);\n    }\n\n    setPermissions(per);\n    setUser({ ...user,\n      Permissions: permissions\n    });\n  };\n\n  const addNewUser = async () => {\n    await usersUtils.addUser(user);\n    setAddUser(!addUser);\n  };\n\n  const handleChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setPersonName( // On autofill we get a stringified value.\n    typeof value === \"string\" ? value.split(\",\") : value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      size: \"small\",\n      color: \"success\",\n      onClick: e => setAddUser(!addUser),\n      children: \"Add User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: addUser && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"300px\",\n          borderWidth: \"3px\",\n          borderStyle: \"solid\",\n          borderColor: \"black\"\n        },\n        children: [\"First Name :\", \" \", /*#__PURE__*/_jsxDEV(Input, {\n          name: \"FName\",\n          required: true,\n          onChange: e => setUser({ ...user,\n            FirstName: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this), \"Last Name :\", \" \", /*#__PURE__*/_jsxDEV(Input, {\n          name: \"LName\",\n          required: true,\n          onChange: e => setUser({ ...user,\n            LastName: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this), \"User Name :\", \" \", /*#__PURE__*/_jsxDEV(Input, {\n          name: \"userName\",\n          required: true,\n          onChange: e => setUser({ ...user,\n            userName: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this), \"Created Date : \", /*#__PURE__*/_jsxDEV(Input, {\n          disabled: true,\n          name: \"CreatedDate\",\n          value: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this), \"Permissions : \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          sx: {\n            m: 1,\n            width: 300\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"demo-multiple-name-label\",\n            children: \"Permissions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"demo-multiple-name-label\",\n            id: \"demo-multiple-name\",\n            multiple: true,\n            value: personName,\n            onChange: handleChange,\n            input: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n              label: \"Permission\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 24\n            }, this),\n            MenuProps: MenuProps,\n            children: permissions.map(Permission => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: Permission,\n              style: getStyles(Permission, personName, theme),\n              children: Permission\n            }, Permission, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"UpdateSubscriptions\",\n          children: \" Update Subscriptions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n          sx: {\n            \"& .MuiSvgIcon-root\": {\n              fontSize: 20\n            }\n          },\n          name: \"Permissions\",\n          checked: MoviesPerisChecked,\n          onChange: () => setMoviesPerisChecked(!MoviesPerisChecked),\n          type: \"checkbox\",\n          value: \"View Movies\",\n          id: \"ViewMovies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"ViewMovies\",\n          children: \" View Movies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n          sx: {\n            \"& .MuiSvgIcon-root\": {\n              fontSize: 20\n            }\n          },\n          name: \"Permissions\",\n          value: \"Create Movies\",\n          id: \"CreateMovies\",\n          onChange: addPermissions,\n          onClick: e => setMoviesPer({ ...MoviesPer,\n            CreateMovies: !MoviesPer.CreateMovies\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"CreateMovies\",\n          children: \" Create Movies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n          sx: {\n            \"& .MuiSvgIcon-root\": {\n              fontSize: 20\n            }\n          },\n          name: \"Permissions\",\n          value: \"Delete Movies\",\n          id: \"DeleteMovies\",\n          onChange: addPermissions,\n          onClick: e => setMoviesPer({ ...MoviesPer,\n            DeleteMovies: !MoviesPer.DeleteMovies\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"DeleteMovies\",\n          children: \" Delete Movies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n          sx: {\n            \"& .MuiSvgIcon-root\": {\n              fontSize: 20\n            }\n          },\n          name: \"Permissions\",\n          value: \"Update Movies\",\n          id: \"UpdateMovies\",\n          onChange: addPermissions,\n          onClick: e => setMoviesPer({ ...MoviesPer,\n            UpdateMovies: !MoviesPer.UpdateMovies\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"UpdateMovies\",\n          children: \"Update Movies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          color: \"success\",\n          variant: \"outlined\",\n          onClick: addNewUser,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          color: \"inherit\",\n          variant: \"outlined\",\n          onClick: e => setAddUser(!addUser),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"row\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      spacing: 3,\n      children: users.map(item => {\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(UserComp, {\n              user: item\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 15\n          }, this), \" \"]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AllUsersComp, \"z7/NkoBG7Mt/aAjjPzULXVCYgDs=\", false, function () {\n  return [useTheme];\n});\n\n_c = AllUsersComp;\nexport default AllUsersComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllUsersComp\");","map":{"version":3,"sources":["C:/Users/User/FullStack/fullStack1/fullstack/src/views/UsersManagement.js"],"names":["useState","useEffect","usersUtils","UserComp","Button","Grid","Checkbox","Input","FormControl","InputLabel","MenuItem","OutlinedInput","Select","useTheme","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","getStyles","permission","personName","theme","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","AllUsersComp","users","setUsers","addUser","setAddUser","user","setUser","date","setdate","SubscriptionsPer","setSubscriptionsPer","CreateSubscriptions","DeleteSubscriptions","UpdateSubscriptions","SubscriptionsPerisChecked","setSubscriptionsPerisChecked","MoviesPer","setMoviesPer","CreateMovies","DeleteMovies","UpdateMovies","MoviesPerisChecked","setMoviesPerisChecked","permissions","setPermissions","setPersonName","fetchData","allUsers","today","Date","currentDate","getFullYear","getMonth","getDate","addPermissions","e","per","console","log","target","value","checked","push","index","splice","Permissions","addNewUser","handleChange","event","split","borderWidth","borderStyle","borderColor","FirstName","LastName","userName","m","map","Permission","fontSize","item","id"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport usersUtils from \"../utils/UsersUtils\";\r\nimport UserComp from \"./User\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport Input from \"@mui/material/Input\";\r\nimport {\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  OutlinedInput,\r\n  Select,\r\n} from \"@material-ui/core\";\r\nimport { useTheme } from \"@emotion/react\";\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nfunction getStyles(permission, personName, theme) {\r\n  return {\r\n    fontWeight:\r\n      personName.indexOf(permission) === -1\r\n        ? theme.typography.fontWeightRegular\r\n        : theme.typography.fontWeightMedium,\r\n  };\r\n}\r\n\r\nfunction AllUsersComp() {\r\n  const [users, setUsers] = useState([]);\r\n  const [addUser, setAddUser] = useState(false);\r\n  const [user, setUser] = useState({});\r\n  const [date, setdate] = useState(\"\");\r\n  const [SubscriptionsPer, setSubscriptionsPer] = useState({\r\n    CreateSubscriptions: false,\r\n    DeleteSubscriptions: false,\r\n    UpdateSubscriptions: false,\r\n  });\r\n  const [SubscriptionsPerisChecked, setSubscriptionsPerisChecked] =\r\n    useState(false);\r\n  const [MoviesPer, setMoviesPer] = useState({\r\n    CreateMovies: false,\r\n    DeleteMovies: false,\r\n    UpdateMovies: false,\r\n  });\r\n  const [MoviesPerisChecked, setMoviesPerisChecked] = useState(false);\r\n  const [permissions, setPermissions] = useState([]);\r\n  const theme = useTheme();\r\n  const [personName, setPersonName] = useState([]);\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let allUsers = await usersUtils.allUsers();\r\n      let today = new Date();\r\n      let currentDate =\r\n        today.getFullYear() +\r\n        \"-\" +\r\n        (today.getMonth() + 1) +\r\n        \"-\" +\r\n        today.getDate();\r\n      setdate(currentDate);\r\n      setUsers(allUsers);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      if (\r\n        SubscriptionsPer.CreateSubscriptions ||\r\n        SubscriptionsPer.DeleteSubscriptions ||\r\n        SubscriptionsPer.UpdateSubscriptions\r\n      ) {\r\n        setSubscriptionsPerisChecked(true);\r\n      }\r\n      if (\r\n        !SubscriptionsPer.CreateSubscriptions &&\r\n        !SubscriptionsPer.DeleteSubscriptions &&\r\n        !SubscriptionsPer.UpdateSubscriptions\r\n      ) {\r\n        setSubscriptionsPerisChecked(false);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, [SubscriptionsPer]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      if (\r\n        MoviesPer.CreateMovies ||\r\n        MoviesPer.DeleteMovies ||\r\n        MoviesPer.UpdateMovies\r\n      ) {\r\n        setMoviesPerisChecked(true);\r\n      }\r\n      if (\r\n        !MoviesPer.CreateMovies &&\r\n        !MoviesPer.DeleteMovies &&\r\n        !MoviesPer.UpdateMovies\r\n      ) {\r\n        setMoviesPerisChecked(false);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, [MoviesPer]);\r\n\r\n  //Create permissions array\r\n  const addPermissions = (e) => {\r\n    let per = permissions;\r\n    console.log(e.target.value);\r\n    if (e.target.checked) {\r\n      per.push(e.target.value);\r\n    }\r\n    if (!e.target.checked) {\r\n      let index = per.indexOf(e.target.value);\r\n      per.splice(index, 1);\r\n    }\r\n\r\n    if (SubscriptionsPerisChecked) {\r\n      per.push(\"View Subscriptions\");\r\n    } else if (!SubscriptionsPerisChecked) {\r\n      let index = per.indexOf(\"View Subscriptions\");\r\n      per.splice(index, 1);\r\n    }\r\n    if (MoviesPerisChecked) {\r\n      per.push(\"View Movies\");\r\n    } else if (!MoviesPerisChecked) {\r\n      let index = per.indexOf(\"View Movies\");\r\n      per.splice(index, 1);\r\n    }\r\n    setPermissions(per);\r\n    setUser({ ...user, Permissions: permissions });\r\n  };\r\n\r\n  const addNewUser = async () => {\r\n    await usersUtils.addUser(user);\r\n    setAddUser(!addUser);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setPersonName(\r\n      // On autofill we get a stringified value.\r\n      typeof value === \"string\" ? value.split(\",\") : value\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Users</h1>\r\n      <Button\r\n        variant=\"contained\"\r\n        size=\"small\"\r\n        color=\"success\"\r\n        onClick={(e) => setAddUser(!addUser)}\r\n      >\r\n        Add User\r\n      </Button>\r\n\r\n      <div>\r\n        {addUser && (\r\n          <div\r\n            style={{\r\n              width: \"300px\",\r\n              borderWidth: \"3px\",\r\n              borderStyle: \"solid\",\r\n              borderColor: \"black\",\r\n            }}\r\n          >\r\n            First Name :{\" \"}\r\n            <Input\r\n              name=\"FName\"\r\n              required\r\n              onChange={(e) => setUser({ ...user, FirstName: e.target.value })}\r\n            />{\" \"}\r\n            <br />\r\n            Last Name :{\" \"}\r\n            <Input\r\n              name=\"LName\"\r\n              required\r\n              onChange={(e) => setUser({ ...user, LastName: e.target.value })}\r\n            />{\" \"}\r\n            <br />\r\n            User Name :{\" \"}\r\n            <Input\r\n              name=\"userName\"\r\n              required\r\n              onChange={(e) => setUser({ ...user, userName: e.target.value })}\r\n            />\r\n            <br />\r\n            Created Date : <Input disabled name=\"CreatedDate\" value={date} />\r\n            <br />\r\n            Permissions : <br />\r\n            <FormControl sx={{ m: 1, width: 300 }}>\r\n              <InputLabel id=\"demo-multiple-name-label\">Permissions</InputLabel>\r\n              <Select\r\n                labelId=\"demo-multiple-name-label\"\r\n                id=\"demo-multiple-name\"\r\n                multiple\r\n                value={personName}\r\n                onChange={handleChange}\r\n                input={<OutlinedInput label=\"Permission\" />}\r\n                MenuProps={MenuProps}\r\n              >\r\n                {permissions.map((Permission) => (\r\n                  <MenuItem\r\n                    key={Permission}\r\n                    value={Permission}\r\n                    style={getStyles(Permission, personName, theme)}\r\n                  >\r\n                    {Permission}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            {/* <Checkbox\r\n              sx={{ \"& .MuiSvgIcon-root\": { fontSize: 20 } }}\r\n              name=\"Permissions\"\r\n              checked={SubscriptionsPerisChecked}\r\n              onChange={() =>\r\n                setSubscriptionsPerisChecked(!SubscriptionsPerisChecked)\r\n              }\r\n              type=\"checkbox\"\r\n              value=\"View Subscriptions\"\r\n              id=\"ViewSubscriptions\"\r\n            />\r\n            <label htmlFor=\"ViewSubscriptions\"> View Subscriptions</label>\r\n            <br />\r\n            <Checkbox\r\n              sx={{ \"& .MuiSvgIcon-root\": { fontSize: 20 } }}\r\n              name=\"Permissions\"\r\n              value=\"Create Subscriptions\"\r\n              id=\"CreateSubscriptions\"\r\n              onChange={addPermissions}\r\n              onClick={(e) =>\r\n                setSubscriptionsPer({\r\n                  ...SubscriptionsPer,\r\n                  CreateSubscriptions: !SubscriptionsPer.CreateSubscriptions,\r\n                })\r\n              }\r\n            />\r\n            <label htmlFor=\"CreateSubscriptions\"> Create Subscriptions</label>\r\n            <br />\r\n            <Checkbox\r\n              sx={{ \"& .MuiSvgIcon-root\": { fontSize: 20 } }}\r\n              name=\"Permissions\"\r\n              value=\"Delete Subscriptions\"\r\n              id=\"DeleteSubscriptions\"\r\n              onChange={addPermissions}\r\n              onClick={(e) =>\r\n                setSubscriptionsPer({\r\n                  ...SubscriptionsPer,\r\n                  DeleteSubscriptions: !SubscriptionsPer.DeleteSubscriptions,\r\n                })\r\n              }\r\n            />\r\n            <label htmlFor=\"DeleteSubscriptions\"> Delete Subscriptions</label>\r\n            <br />\r\n            <Checkbox\r\n              sx={{ \"& .MuiSvgIcon-root\": { fontSize: 20 } }}\r\n              name=\"Permissions\"\r\n              value=\"Update Subscriptions\"\r\n              id=\"UpdateSubscriptions\"\r\n              onChange={addPermissions}\r\n              onClick={(e) =>\r\n                setSubscriptionsPer({\r\n                  ...SubscriptionsPer,\r\n                  UpdateSubscriptions: !SubscriptionsPer.UpdateSubscriptions,\r\n                })\r\n              }\r\n            /> */}\r\n            <label htmlFor=\"UpdateSubscriptions\"> Update Subscriptions</label>\r\n            <br />\r\n            <Checkbox\r\n              sx={{ \"& .MuiSvgIcon-root\": { fontSize: 20 } }}\r\n              name=\"Permissions\"\r\n              checked={MoviesPerisChecked}\r\n              onChange={() => setMoviesPerisChecked(!MoviesPerisChecked)}\r\n              type=\"checkbox\"\r\n              value=\"View Movies\"\r\n              id=\"ViewMovies\"\r\n            />\r\n            <label htmlFor=\"ViewMovies\"> View Movies</label>\r\n            <br />\r\n            <Checkbox\r\n              sx={{ \"& .MuiSvgIcon-root\": { fontSize: 20 } }}\r\n              name=\"Permissions\"\r\n              value=\"Create Movies\"\r\n              id=\"CreateMovies\"\r\n              onChange={addPermissions}\r\n              onClick={(e) =>\r\n                setMoviesPer({\r\n                  ...MoviesPer,\r\n                  CreateMovies: !MoviesPer.CreateMovies,\r\n                })\r\n              }\r\n            />\r\n            <label htmlFor=\"CreateMovies\"> Create Movies</label>\r\n            <br />\r\n            <Checkbox\r\n              sx={{ \"& .MuiSvgIcon-root\": { fontSize: 20 } }}\r\n              name=\"Permissions\"\r\n              value=\"Delete Movies\"\r\n              id=\"DeleteMovies\"\r\n              onChange={addPermissions}\r\n              onClick={(e) =>\r\n                setMoviesPer({\r\n                  ...MoviesPer,\r\n                  DeleteMovies: !MoviesPer.DeleteMovies,\r\n                })\r\n              }\r\n            />\r\n            <label htmlFor=\"DeleteMovies\"> Delete Movies</label>\r\n            <br />\r\n            <Checkbox\r\n              sx={{ \"& .MuiSvgIcon-root\": { fontSize: 20 } }}\r\n              name=\"Permissions\"\r\n              value=\"Update Movies\"\r\n              id=\"UpdateMovies\"\r\n              onChange={addPermissions}\r\n              onClick={(e) =>\r\n                setMoviesPer({\r\n                  ...MoviesPer,\r\n                  UpdateMovies: !MoviesPer.UpdateMovies,\r\n                })\r\n              }\r\n            />\r\n            <label htmlFor=\"UpdateMovies\">Update Movies</label>\r\n            <br />\r\n            <Button\r\n              size=\"small\"\r\n              color=\"success\"\r\n              variant=\"outlined\"\r\n              onClick={addNewUser}\r\n            >\r\n              Save\r\n            </Button>\r\n            <Button\r\n              size=\"small\"\r\n              color=\"inherit\"\r\n              variant=\"outlined\"\r\n              onClick={(e) => setAddUser(!addUser)}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <br />\r\n      <br />\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        spacing={3}\r\n      >\r\n        {users.map((item) => {\r\n          return (\r\n            <Grid key={item.id} item xs={4}>\r\n              {\" \"}\r\n              <div>\r\n                <UserComp user={item} />\r\n                <br />\r\n              </div>{\" \"}\r\n            </Grid>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AllUsersComp;\r\n"]},"metadata":{},"sourceType":"module"}