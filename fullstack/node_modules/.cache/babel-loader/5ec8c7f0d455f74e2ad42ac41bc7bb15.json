{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\FullStack\\\\fullStack1\\\\fullstack\\\\src\\\\views\\\\User.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from \"react\";\nimport UsersUtils from \"../utils/UsersUtils\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Button from \"@mui/material/Button\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Input from \"@mui/material/Input\";\nimport CardActions from \"@mui/material/CardActions\";\nimport { FormControl, InputLabel, ListItemText, MenuItem, OutlinedInput, Select } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\nconst names = [\"View Subscriptions\", \"Create Subscriptions\", \"Delete Subscriptions\", \"Update Subscriptions\", \"View Movies\", \"Create Movies\", \"Delete Movies\", \"Update Movies\"];\n\nconst UserComp = props => {\n  _s();\n\n  const [user, setUser] = useState({});\n  const [editUser, setEditUser] = useState(false);\n  const [disable, setdisable] = useState(true);\n  const theme = useTheme();\n  const [personName, setPersonName] = useState([]); // const inputRef = useRef(null);\n  // const [permissions, setPermissions] = useState([]);\n  // const permissionsNames = [\n  //   \"View Subscriptions\",\n  //   \"Create Subscriptions\",\n  //   \"Delete Subscriptions\",\n  //   \"Update Subscriptions\",\n  //   \"View Movies\",\n  //   \"Create Movies\",\n  //   \"Delete Movies\",\n  //   \"Update Movies\",\n  // ];\n\n  useEffect(() => {\n    async function fetchData() {\n      setUser(props.user);\n    }\n\n    fetchData();\n  }, [props]);\n\n  const deleteUser = async () => {\n    return await UsersUtils.deleteUser(props.user.id);\n  };\n\n  const updateUser = async () => {\n    if (user) {\n      await UsersUtils.EditUser(props.user.id, user);\n      setEditUser(!editUser);\n    }\n  }; // const handleChange = (event) => {\n  //   const {\n  //     target: { value },\n  //   } = event;\n  //   setPermissions(typeof value === \"string\" ? value.split(\",\") : value);\n  //   setUser({ ...user, Permissions: permissions });\n  // };\n  // const handleSubmitButton = () => {\n  //   alert(inputRef.current.value);\n  // };\n\n\n  const handleChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setPersonName( // On autofill we get a stringified value.\n    typeof value === \"string\" ? value.split(\",\") : value);\n    setUser({ ...user,\n      Permissions: personName\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"400px\",\n          borderWidth: \"3px\",\n          borderStyle: \"solid\",\n          borderColor: \"gray\"\n        },\n        children: [\"First Name :\", \" \", /*#__PURE__*/_jsxDEV(Input, {\n          name: \"FName\",\n          value: user.FirstName,\n          disabled: disable,\n          onChange: e => setUser({ ...user,\n            FirstName: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), \"Last Name :\", \" \", /*#__PURE__*/_jsxDEV(Input, {\n          name: \"LName\",\n          value: user.LastName,\n          disabled: disable,\n          onChange: e => setUser({ ...user,\n            LastName: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), \"User Name :\", \" \", /*#__PURE__*/_jsxDEV(Input, {\n          name: \"userName\",\n          value: user.userName,\n          disabled: disable,\n          onChange: e => setUser({ ...user,\n            userName: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), \"Permissons:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          sx: {\n            m: 1,\n            width: 300\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"demo-multiple-name-label\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"demo-multiple-checkbox-label\",\n            id: \"demo-multiple-checkbox\",\n            multiple: true,\n            value: personName,\n            onChange: handleChange,\n            input: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n              label: \"Tag\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 22\n            }, this),\n            renderValue: selected => selected.join(\", \"),\n            MenuProps: MenuProps,\n            children: names.map(name => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: name,\n              children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: personName.indexOf(name) > -1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 19\n              }, this)]\n            }, name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), !disable && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          size: \"small\",\n          color: \"success\",\n          onClick: updateUser,\n          children: \"Update User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              size: \"small\",\n              variant: \"outlined\",\n              onClick: e => setdisable(!disable),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              size: \"small\",\n              variant: \"outlined\",\n              color: \"error\",\n              onClick: deleteUser,\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserComp, \"VY7SKLDAmXT/Ds9cO50zUR9NqnA=\", true);\n\n_c = UserComp;\nexport default UserComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserComp\");","map":{"version":3,"sources":["C:/Users/User/FullStack/fullStack1/fullstack/src/views/User.js"],"names":["useState","useEffect","useRef","UsersUtils","Card","CardContent","Button","Checkbox","Input","CardActions","FormControl","InputLabel","ListItemText","MenuItem","OutlinedInput","Select","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","names","UserComp","props","user","setUser","editUser","setEditUser","disable","setdisable","theme","useTheme","personName","setPersonName","fetchData","deleteUser","id","updateUser","EditUser","handleChange","event","target","value","split","Permissions","borderWidth","borderStyle","borderColor","FirstName","e","LastName","userName","m","selected","join","map","name","indexOf"],"mappings":"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","sourcesContent":["import { useState, useEffect, useRef } from \"react\";\r\nimport UsersUtils from \"../utils/UsersUtils\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport Input from \"@mui/material/Input\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport {\r\n  FormControl,\r\n  InputLabel,\r\n  ListItemText,\r\n  MenuItem,\r\n  OutlinedInput,\r\n  Select,\r\n} from \"@material-ui/core\";\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nconst names = [\r\n  \"View Subscriptions\",\r\n  \"Create Subscriptions\",\r\n  \"Delete Subscriptions\",\r\n  \"Update Subscriptions\",\r\n  \"View Movies\",\r\n  \"Create Movies\",\r\n  \"Delete Movies\",\r\n  \"Update Movies\",\r\n];\r\nconst UserComp = (props) => {\r\n  const [user, setUser] = useState({});\r\n  const [editUser, setEditUser] = useState(false);\r\n  const [disable, setdisable] = useState(true);\r\n  const theme = useTheme();\r\n  const [personName, setPersonName] = useState([]);\r\n\r\n  // const inputRef = useRef(null);\r\n  // const [permissions, setPermissions] = useState([]);\r\n  // const permissionsNames = [\r\n  //   \"View Subscriptions\",\r\n  //   \"Create Subscriptions\",\r\n  //   \"Delete Subscriptions\",\r\n  //   \"Update Subscriptions\",\r\n  //   \"View Movies\",\r\n  //   \"Create Movies\",\r\n  //   \"Delete Movies\",\r\n  //   \"Update Movies\",\r\n  // ];\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      setUser(props.user);\r\n    }\r\n    fetchData();\r\n  }, [props]);\r\n\r\n  const deleteUser = async () => {\r\n    return await UsersUtils.deleteUser(props.user.id);\r\n  };\r\n\r\n  const updateUser = async () => {\r\n    if (user) {\r\n      await UsersUtils.EditUser(props.user.id, user);\r\n      setEditUser(!editUser);\r\n    }\r\n  };\r\n\r\n  // const handleChange = (event) => {\r\n  //   const {\r\n  //     target: { value },\r\n  //   } = event;\r\n  //   setPermissions(typeof value === \"string\" ? value.split(\",\") : value);\r\n  //   setUser({ ...user, Permissions: permissions });\r\n  // };\r\n\r\n  // const handleSubmitButton = () => {\r\n  //   alert(inputRef.current.value);\r\n  // };\r\n  const handleChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setPersonName(\r\n      // On autofill we get a stringified value.\r\n      typeof value === \"string\" ? value.split(\",\") : value\r\n    );\r\n    setUser({ ...user, Permissions: personName });\r\n  };\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <div\r\n          style={{\r\n            width: \"400px\",\r\n            borderWidth: \"3px\",\r\n            borderStyle: \"solid\",\r\n            borderColor: \"gray\",\r\n          }}\r\n        >\r\n          First Name :{\" \"}\r\n          <Input\r\n            name=\"FName\"\r\n            value={user.FirstName}\r\n            disabled={disable}\r\n            onChange={(e) => setUser({ ...user, FirstName: e.target.value })}\r\n          />{\" \"}\r\n          <br />\r\n          Last Name :{\" \"}\r\n          <Input\r\n            name=\"LName\"\r\n            value={user.LastName}\r\n            disabled={disable}\r\n            onChange={(e) => setUser({ ...user, LastName: e.target.value })}\r\n          />{\" \"}\r\n          <br />\r\n          User Name :{\" \"}\r\n          <Input\r\n            name=\"userName\"\r\n            value={user.userName}\r\n            disabled={disable}\r\n            onChange={(e) => setUser({ ...user, userName: e.target.value })}\r\n          />\r\n          <br />\r\n          {/* \r\n          <FormControl sx={{ m: 1, width: 300 }}>\r\n            <InputLabel id=\"demo-multiple-checkbox-label\">Permissions</InputLabel>\r\n            <Select\r\n              labelId=\"demo-multiple-checkbox-label\"\r\n              id=\"demo-multiple-checkbox\"\r\n              multiple\r\n              disabled={disable}\r\n              value={permissions}\r\n              onChange={handleChange}\r\n              input={<OutlinedInput label=\"Permissions\" />}\r\n              renderValue={(selected) => selected.join(', ')}\r\n            >\r\n              {permissionsNames.map((name, index) => (\r\n                <MenuItem key={index} value={name}>\r\n                  <Checkbox checked={(props.user.Permissions).includes(name) ? true : false} />\r\n                  <ListItemText primary={name} />\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl> */}\r\n          Permissons:\r\n          <br />\r\n          <FormControl sx={{ m: 1, width: 300 }}>\r\n            <InputLabel id=\"demo-multiple-name-label\">Name</InputLabel>\r\n            <Select\r\n              labelId=\"demo-multiple-checkbox-label\"\r\n              id=\"demo-multiple-checkbox\"\r\n              multiple\r\n              value={personName}\r\n              onChange={handleChange}\r\n              input={<OutlinedInput label=\"Tag\" />}\r\n              renderValue={(selected) => selected.join(\", \")}\r\n              MenuProps={MenuProps}\r\n            >\r\n              {names.map((name) => (\r\n                <MenuItem key={name} value={name}>\r\n                  <Checkbox checked={personName.indexOf(name) > -1} />\r\n                  <ListItemText primary={name} />\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n          {/* <Checkbox\r\n            name=\"Permissions\"\r\n            value=\"View Subscriptions\"\r\n            id=\"View Subscriptions\"\r\n          />\r\n          <label htmlFor=\"ViewSubscriptions\"> View Subscriptions</label>\r\n          <br />\r\n          <Checkbox\r\n            name=\"Permissions\"\r\n            value=\"Create Subscriptions\"\r\n            id=\"Create Subscriptions\"\r\n            onclick=\"CheckSub()\"\r\n          />\r\n          <label htmlFor=\"CreateSubscriptions\"> Create Subscriptions</label>\r\n          <br />\r\n          <Checkbox\r\n            name=\"Permissions\"\r\n            value=\"Delete Subscriptions\"\r\n            id=\"Delete Subscriptions\"\r\n            onclick=\"CheckSub()\"\r\n          />\r\n          <label htmlFor=\"DeleteSubscriptions\"> Delete Subscriptions</label>\r\n          <br />\r\n          <Checkbox\r\n            name=\"Permissions\"\r\n            value=\"Update Subscriptions\"\r\n            id=\"Update Subscriptions\"\r\n            onclick=\"CheckSub()\"\r\n          />\r\n          <label htmlFor=\"UpdateSubscriptions\"> Update Subscriptions</label>\r\n          <br />\r\n          <Checkbox name=\"Permissions\" value=\"View Movies\" id=\"View Movies\" />\r\n          <label htmlFor=\"ViewMovies\"> View Movies</label>\r\n          <br />\r\n          <Checkbox\r\n            name=\"Permissions\"\r\n            value=\"Create Movies\"\r\n            id=\"Create Movies\"\r\n            onclick=\"CheckMovie()\"\r\n          />\r\n          <label htmlFor=\"CreateMovies\"> Create Movies</label>\r\n          <br />\r\n          <Checkbox\r\n            name=\"Permissions\"\r\n            value=\"Delete Movies\"\r\n            id=\"Delete Movies\"\r\n            onclick=\"CheckMovie()\"\r\n          />\r\n          <label htmlFor=\"DeleteMovies\"> Delete Movies</label>\r\n          <br />\r\n          <Checkbox\r\n            name=\"Permissions\"\r\n            value=\"Update Movies\"\r\n            id=\"Update Movies\"\r\n            onclick=\"CheckMovie()\"\r\n          />\r\n          <label htmlFor=\"UpdateMovies\">Update Movies</label> */}\r\n          <br />\r\n          {!disable && (\r\n            <Button\r\n              variant=\"contained\"\r\n              size=\"small\"\r\n              color=\"success\"\r\n              onClick={updateUser}\r\n            >\r\n              Update User\r\n            </Button>\r\n          )}\r\n          <br />\r\n          <br />\r\n          <CardActions>\r\n            <div>\r\n              <Button\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                onClick={(e) => setdisable(!disable)}\r\n              >\r\n                Edit\r\n              </Button>\r\n            </div>\r\n            <div>\r\n              <Button\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                color=\"error\"\r\n                onClick={deleteUser}\r\n              >\r\n                Delete\r\n              </Button>\r\n            </div>\r\n          </CardActions>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default UserComp;\r\n"]},"metadata":{},"sourceType":"module"}