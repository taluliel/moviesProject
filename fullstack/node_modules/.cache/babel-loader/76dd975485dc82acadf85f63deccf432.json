{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\FullStack\\\\fullStack1\\\\fullstack\\\\src\\\\views\\\\AllMovies.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport moviesUtils from '../utils/moviesUtils';\nimport MovieComp from './Movie';\nimport { useSelector } from \"react-redux\";\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AllMoviesComp() {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [addMovie, setAddMovie] = useState(false);\n  const [movie, setMovie] = useState({});\n  const permissions = useSelector(state => state.user.Permissions);\n  useEffect(() => {\n    async function fetchData() {\n      let allMovies = await moviesUtils.allMovies();\n      setMovies(allMovies);\n    }\n\n    fetchData();\n  }, []);\n\n  const addNewMovie = async () => {\n    await moviesUtils.addMovie(movie);\n    setAddMovie(!addMovie);\n  };\n\n  const searchMovie = async movieName => {\n    console.log(movieName);\n\n    if (!movieName) {\n      let allMovies = await moviesUtils.allMovies();\n      setMovies(allMovies);\n    } else {\n      let allMovies = await moviesUtils.allMovies();\n      let searchedMovies = allMovies.filter(x => x.Name.includes(movieName));\n      setMovies(searchedMovies);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), movies && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n        disablePortal: true,\n        id: \"combo-box-demo\",\n        options: movies.map(option => option.Name),\n        sx: {\n          width: 300\n        },\n        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n          label: \"Search Movie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 38\n        }, this),\n        onChange: (event, value) => searchMovie(value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), permissions.includes(\"Create Movies\") && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: e => setAddMovie(!addMovie),\n          children: \"Add Movie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 93\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 99\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: addMovie && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"300px\",\n            borderWidth: \"3px\",\n            borderStyle: \"solid\",\n            borderColor: \"black\"\n          },\n          children: [\"Name : \", /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"Name\",\n            required: true,\n            onChange: e => setMovie({ ...movie,\n              Name: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 24\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 116\n          }, this), \"Genres : \", /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"Genres\",\n            required: true,\n            onChange: e => setMovie({ ...movie,\n              Genres: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 121\n          }, this), \"Image URL : \", /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"Image\",\n            required: true,\n            onChange: e => setMovie({ ...movie,\n              Image: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 122\n          }, this), \"Premiered : \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"Date\",\n            required: true,\n            name: \"Premiered\",\n            onChange: e => setMovie({ ...movie,\n              Premiered: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 142\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Save\",\n            onClick: addNewMovie\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: e => setAddMovie(!addMovie),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 92\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 98\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        spacing: 3,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          children: movies.map(item => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(MovieComp, {\n                movie: item\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 46\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 72\n              }, this)]\n            }, item._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 26\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AllMoviesComp, \"zygSs7m3pzqNYx3lwlsB+1rJ4d0=\", false, function () {\n  return [useSelector];\n});\n\n_c = AllMoviesComp;\nexport default AllMoviesComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllMoviesComp\");","map":{"version":3,"sources":["C:/Users/User/FullStack/fullStack1/fullstack/src/views/AllMovies.js"],"names":["useState","useEffect","moviesUtils","MovieComp","useSelector","TextField","Autocomplete","Box","Paper","Grid","AllMoviesComp","movies","setMovies","addMovie","setAddMovie","movie","setMovie","permissions","state","user","Permissions","fetchData","allMovies","addNewMovie","searchMovie","movieName","console","log","searchedMovies","filter","x","Name","includes","map","option","width","params","event","value","e","borderWidth","borderStyle","borderColor","target","Genres","Image","Premiered","item","_id"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport moviesUtils from '../utils/moviesUtils'\r\nimport MovieComp from './Movie'\r\nimport { useSelector } from \"react-redux\";\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport Grid from '@mui/material/Grid';\r\n\r\nfunction AllMoviesComp() {\r\n\r\n  const [movies, setMovies] = useState([])\r\n  const [addMovie, setAddMovie] = useState(false)\r\n  const [movie, setMovie] = useState({})\r\n  const permissions = useSelector((state) => state.user.Permissions)\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let allMovies = await moviesUtils.allMovies();\r\n      setMovies(allMovies)\r\n    }\r\n    fetchData();\r\n  }, [])\r\n\r\n  const addNewMovie = async () => {\r\n    await moviesUtils.addMovie(movie);\r\n    setAddMovie(!addMovie)\r\n  }\r\n\r\n  const searchMovie = async (movieName) => {\r\n    console.log(movieName)\r\n\r\n    if (!movieName) {\r\n      let allMovies = await moviesUtils.allMovies();\r\n      setMovies(allMovies)\r\n    }\r\n    else {\r\n      let allMovies = await moviesUtils.allMovies();\r\n      let searchedMovies = allMovies.filter(x => x.Name.includes(movieName))\r\n      setMovies(searchedMovies)\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n\r\n      <h1>Movies</h1>\r\n      <br />\r\n\r\n      {movies &&\r\n        <div>\r\n          <Autocomplete\r\n            disablePortal\r\n            id=\"combo-box-demo\"\r\n            options={movies.map((option) => option.Name)}\r\n            sx={{ width: 300 }}\r\n            renderInput={(params) => <TextField {...params} label=\"Search Movie\" />}\r\n            onChange={(event, value) => searchMovie(value)}\r\n          />\r\n\r\n          {permissions.includes(\"Create Movies\") &&\r\n            <div>\r\n              <button type=\"button\" onClick={e => setAddMovie(!addMovie)}>Add Movie</button><br /><br />\r\n            </div>\r\n          }\r\n\r\n          <div>\r\n            {addMovie &&\r\n              <div style={{ width: \"300px\", borderWidth: \"3px\", borderStyle: \"solid\", borderColor: \"black\" }}>\r\n\r\n                Name : <input name=\"Name\" required onChange={e => setMovie({ ...movie, Name: e.target.value })} /> <br />\r\n                Genres : <input name=\"Genres\" required onChange={e => setMovie({ ...movie, Genres: e.target.value })} /><br />\r\n                Image URL : <input name=\"Image\" required onChange={e => setMovie({ ...movie, Image: e.target.value })} /><br />\r\n                Premiered : <input type=\"Date\" required name=\"Premiered\" onChange={e => setMovie({ ...movie, Premiered: e.target.value })} /><br />\r\n\r\n                <input type=\"submit\" value=\"Save\" onClick={addNewMovie} />\r\n                <button type=\"button\" onClick={e => setAddMovie(!addMovie)}>Cancel</button><br /><br />\r\n              </div>\r\n            }\r\n          </div><br /><br />\r\n\r\n          <Grid container\r\n            direction=\"row\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n            spacing={3}>\r\n            <Grid item xs={4}>\r\n              {\r\n                movies.map(item => {\r\n                  return <div key={item._id}><MovieComp movie={item} /><br /></div>\r\n                })\r\n              }\r\n            </Grid>\r\n          </Grid>\r\n\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AllMoviesComp;\r\n"]},"metadata":{},"sourceType":"module"}